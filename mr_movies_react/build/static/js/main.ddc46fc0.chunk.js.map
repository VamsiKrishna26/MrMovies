{"version":3,"sources":["components/CelebritySpotlight/assets sync /^/.*/.jpg$","components/CelebritySpotlight/assets/Actors/Brad Pitt.jpg","components/CelebritySpotlight/assets/Actors/Bradley Cooper.jpg","components/CelebritySpotlight/assets/Actors/Christian Bale.jpg","components/CelebritySpotlight/assets/Actors/Harrison Ford.jpg","components/CelebritySpotlight/assets/Actors/Johnny Depp.jpg","components/CelebritySpotlight/assets/Actors/Leonardo DiCaprio.jpg","components/CelebritySpotlight/assets/Actors/Robert De Niro.jpg","components/CelebritySpotlight/assets/Actors/Robert Downey Jr.jpg","components/CelebritySpotlight/assets/Actors/Tom Cruise.jpg","components/CelebritySpotlight/assets/Actors/Tom Hanks.jpg","components/CelebritySpotlight/assets/Actress/Cate Blanchett.jpg","components/CelebritySpotlight/assets/Actress/Emma Stone.jpg","components/CelebritySpotlight/assets/Actress/Eva Green.jpg","components/CelebritySpotlight/assets/Actress/Jennifer Lawrence.jpg","components/CelebritySpotlight/assets/Actress/Kate Winslet.jpg","components/CelebritySpotlight/assets/Actress/Meryl Streep.jpg","components/CelebritySpotlight/assets/Actress/Natalie Portman.jpg","components/CelebritySpotlight/assets/Actress/Nicole Kidman.jpg","components/CelebritySpotlight/assets/Actress/Saoirse Ronan.jpg","components/CelebritySpotlight/assets/Actress/Scarlett Johansson.jpg","components/CelebritySpotlight/assets/Directors/Christopher Nolan.jpg","components/CelebritySpotlight/assets/Directors/David Fincher.jpg","components/CelebritySpotlight/assets/Directors/James Cameron.jpg","components/CelebritySpotlight/assets/Directors/Jon Favreau.jpg","components/CelebritySpotlight/assets/Directors/M. Night Shyamalan.jpg","components/CelebritySpotlight/assets/Directors/Martin Scorsese.jpg","components/CelebritySpotlight/assets/Directors/Quentin Tarantino.jpg","components/CelebritySpotlight/assets/Directors/Ridley Scott.jpg","components/CelebritySpotlight/assets/Directors/Sam Raimi.jpg","components/CelebritySpotlight/assets/Directors/Steven Spielberg.jpg","firebase/firebase.util.js","redux/titles/titles.selector.js","redux/user/user.selector.js","redux/user/user.types.js","redux/user/user.actions.js","components/TitleCard/TitleCards.component.jsx","components/with-spinner/with-spinner.styles.jsx","components/with-spinner/with-spinner.component.jsx","redux/titles/titles.types.js","redux/titles/titles.actions.js","pages/genre/genre.component.jsx","components/TitleDescription/ReviewJumbotron.component.jsx","components/TitleDescription/Assets/emoji.png","components/TitleDescription/DiscussionsJumbotron.component.jsx","components/TitleDescription/Discussions.component.jsx","components/TitleDescription/TitleDetails.component.jsx","components/TitleDescription/TitleDescription.component.jsx","pages/search/search.component.jsx","pages/search/SearchClick.component.jsx","components/TableDisplay/TableData.component.jsx","pages/top/topmovies.component.jsx","components/TableDisplay/TableDisplay.component.jsx","components/Header/Header.component.jsx","components/SlideShow/Slideshow.component.jsx","components/SlideShow/assets/interstellar.jpg","components/SlideShow/assets/civil_war.jpg","components/SlideShow/assets/daysoffuturepast.jpg","components/SlideShow/assets/doctor_strange.jpg","components/SlideShow/assets/Dunkirk.jpg","components/SlideShow/assets/f8.jpg","components/SlideShow/assets/jurassic_world.jpg","components/SlideShow/assets/justice_league.jpg","components/SlideShow/assets/madmax.jpg","components/SlideShow/assets/thor_ragnarok.jpg","components/SlideShow/assets/rogue_one.jpg","components/SlideShow/assets/potc5.jpg","components/SlideShow/assets/spectre.jpg","components/SlideShow/assets/jungle_book.jpg","components/SlideShow/assets/conjuring2.jpg","components/CelebritySpotlight/CelebritySpotlight.component.jsx","components/TopHits/TopHits.component.jsx","components/TopHits/TopHitsDisplay.component.jsx","components/Recents/Recents.component.jsx","pages/wishlist/Wishlist.component.jsx","pages/recentlyviewed/RecentlyViewed.component.jsx","pages/home/Home.component.jsx","components/Footer/Footer.component.jsx","pages/sort/SortMovies.component.jsx","pages/franchises/Franchises.component.jsx","pages/year/Year.component.jsx","App.js","reportWebVitals.js","redux/titles/titles.reducer.js","redux/user/user.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","createUserProfileDocument","userAuth","addtionalData","a","userRef","firestore","doc","uid","get","exists","displayName","email","createdAt","Date","set","wishlist","recentlyViewed","console","log","addTitleToRecentlyViewedFirestore","userId","titleId","newSet","Set","update","slice","addTitleToWishListFirestore","removeTitleFromWishlistFirestore","splice","indexOf","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","selectMovies","state","movies","selectGenreMovies","createSelector","genreMovies","selectIsGenreMoviesFetching","isFetching","selectIsGenreMoviesLoaded","length","selectFranchises","franchises","selectIsFranchisesFetching","isFetchingFranchises","selectIsFranchisesLoaded","selectMovieWithId","movieWithId","selectMovieWithIdFetching","isFetchingMovie","selectMovieWithIdLoaded","selectMoviesByYear","moviesByYear","selectMoviesByYearFetching","isFetchingMoviesByYear","selectMoviesByYearLoaded","selectWishlist","selectIsWishlistFetching","isFetchingWishlist","selectIsWishlistLoaded","selectRecentlyViewed","selectIsRecentlyViewedFetching","isFetchingRecentlyViewed","selectIsRecentlyViewedLoaded","selectSearchMovies","searchMovies","selectSearchMoviesFetching","isSearching","selectSearchMoviesLoaded","selectSuggestions","suggestions","selectSuggestionsFetching","isSuggesting","selectSuggestionsLoaded","selectTopMovies","topMovies","selectTopMoviesFetching","isFetchingTop","selectTopMoviesLoaded","selectTopHits","topHits","selectTopHitsFetching","isFetchingTopHits","selectTopHitsLoaded","selectRecents","recents","selectRecentsFetching","isFetchingRecents","selectRecentsLoaded","selectTitleSuggestions","titleSuggestions","selectTitleSuggestionsFetching","isFetchingTitleSuggestions","selectTitleSuggestionsLoaded","selectSortMovies","sortMovies","selectSortMoviesFetching","isFetchingSort","selectSortMoviesLoaded","selectCurrentUser","user","currentUser","UserActionTypes","addTitleToWishlistAsync","dispatch","type","removeTitleFromWishlistAsync","Arrow","text","className","ArrowLeft","ArrowRight","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","border","boxShadow","shadows","padding","spacing","cardText","color","modalButton","display","justifyContent","addWishlist","removeWishlist","login","mapStateToProps","createStructuredSelector","connect","titles","horizantal","NoBio","long_cards","classes","useState","modalStyle","movies1","showBio","setShowBio","showInfo","setShowInfo","modalMovie","setModalMovie","push","addToWishlist","removeFromWishlist","Modal","open","onClose","Grow","in","timeout","style","actors","actor","index","to","directors","director","genres","genre","includes","_id","Button","onClick","disabled","data","movie","poster_path","Card","window","innerWidth","Header","title","toUpperCase","Img","variant","src","alt","Body","Text","release_date","Rating","value","weighted_average_vote","precision","max","size","readOnly","total_votes","displayType","thousandSeparator","Footer","arrowLeft","arrowRight","wheel","alignCenter","CardDeck","budget","prefix","revenue","runtime","Row","md","sm","xs","Col","SpinnerOverlay","styled","div","SpinnerContainer","WithSpinner","WrapperComponent","isLoading","otherProps","TitlesActionTypes","FETCH_GENRE_MOVIES_START","FETCH_GENRE_MOVIES_SUCCESS","FETCH_GENRE_MOVIES_FAILURE","FETCH_FRANCHISES_START","FETCH_FRANCHISES_SUCCESS","FETCH_FRANCHISES_FAILURE","FETCH_MOVIE_WITH_ID_START","FETCH_MOVIE_WITH_ID_SUCCESS","FETCH_MOVIE_WITH_ID_FAILURE","FETCH_WISHLIST_START","FETCH_WISHLIST_SUCCESS","FETCH_WISHLIST_FAILURE","FETCH_SEARCH_START","FETCH_SEARCH_SUCCESS","FETCH_SEARCH_FAILURE","FETCH_SUGGESTIONS_START","FETCH_SUGGESTIONS_SUCCESS","FETCH_SUGGESTIONS_FAILURE","FETCH_TOP_MOVIES_START","FETCH_TOP_MOVIES_SUCCESS","FETCH_TOP_MOVIES_FAILURE","FETCH_RECENTS_START","FETCH_RECENTS_SUCCESS","FETCH_RECENTS_FAILURE","FETCH_RECENTLY_VIEWED_START","FETCH_RECENTLY_VIEWED_SUCCESS","FETCH_RECENTLY_VIEWED_FAILURE","FETCH_TOP_HITS_START","FETCH_TOP_HITS_SUCCESS","FETCH_TOP_HITS_FAILURE","FETCH_MOVIES_BY_YEAR_START","FETCH_MOVIES_BY_YEAR_SUCCESS","FETCH_MOVIES_BY_YEAR_FAILURE","FETCH_SORT_MOVIES_START","FETCH_SORT_MOVIES_SUCCESS","FETCH_SORT_MOVIES_FAILURE","FETCH_TITLE_SUGGESTIONS_START","FETCH_TITLE_SUGGESTIONS_SUCCESS","FETCH_TITLE_SUGGESTIONS_FAILURE","fetchGenreMoviesAsync","axios","PORT","then","response","moviesMap","payload","fetchGenreMoviesSuccess","catch","err","fetchFranchisesAsync","fetchFranchisesSuccess","fetchMovieWithIdAsync","movieId","post","headers","fetchMovieWithIdSuccess","fetchMoviesByYearAsync","year","fetchMoviesByYearSuccess","fetchTitleSuggestionsAsync","movie_id","fetchTitleSuggestionsSuccess","fetchSearchAsync","number","fetchSuggestionsAsync","search","fetchTopMoviesAsync","fetchTopHitsAsync","fetchRecentsAsync","fetchSortMoviesStart","fetchSortMoviesSuccess","fetchSortMoviesFailure","message","fetchSortMoviesAsync","query","column","sorted","TitleCardsWithSpinner","TitleCards","GenrePage","scrollTo","this","props","isGenreMoviesFecthing","heading","React","Component","isGenreMoviesLoaded","ReviewJumbotron","review","showmore","setShowmore","Jumbotron","review_summary","parseInt","rating","review_date","review_text","user_id","palette","background","withStyles","input1","comment","deleteComment","discussions","replyComment","showReply","setShowReply","reply","setReply","emojiPicker","setEmojiPicker","body","onEmojiClick","event","emojiObject","emoji","user_name","comment_date","TextField","label","onChange","target","InputProps","startAdornment","InputAdornment","Emoji","input","Discussions","setComment","setDiscussions","useEffect","addComment","preventDefault","comment_to_add","dateFormat","Math","floor","random","sliceDiscussions","comment_id","i","DisplayDiscussions","nestedDiscussions","child","marginLeft","discussion","multiline","rows","isTitleSuggestionsFetching","isTitleSuggestionsLoaded","TitleDetailsWithSpinner","addTitleToRecentlyViewedAsync","scroll","overview","format","toLocaleString","content_rating","production_company","href","imdb_id","rel","rotten","reviews","TitleDescription","match","params","isMovieWithIdfetching","isMovieWithIdLoaded","createTheme","overrides","MuiOutlinedInput","root","borderColor","MuiInputLabel","SearchPage","handleChange","name","setState","handleChange1","bind","ThemeProvider","Autocomplete","freeSolo","disableClearable","options","renderInput","margin","isSuggestionsFetching","isSuggestionsLoaded","SearchClickPage","search_value","isSearchMoviesLoaded","isSearchMoviesFetching","StyledTableCell","head","common","black","white","TableCell","StyledTableRow","TableRow","table","TableData","imdb","history","rank","TableContainer","component","Paper","Table","TableHead","align","TableBody","scope","split","TableDisplayWithSpinner","imdbMovies","TopMoviesPage","isTopMoviesfetching","isTopMoviesLoaded","openMenu","setOpenMenu","signOut","posters","sort","Slideshow","Carousel","fade","interval","poster","Item","url","Caption","CelebritySpotlight","Actors","Actress","Directors","getImage","image","folder","require","default","img","hideSingleArrow","TopHitsDisplayWithSpinner","striped","bordered","hover","responsive","hits","isTopHitsFetching","isTopHitsLoaded","isRecentsFetching","isRecentsLoaded","isWishlistFetching","isWishlistloaded","fetchWishlistAsync","movieIds","Promise","all","bio","isRecentlyViewedFetching","isRecentlyViewedLoaded","fetchRecentlyViewedAsync","HomePage","SortMoviesPage","openFilters","lowest_rating","highest_rating","revenueCheckbox","genreCheckBox","Action","Drama","Fantasy","Horror","Romance","Comedy","Thriller","Crime","Animation","History","Adventure","lowest_revenue","highest_revenue","lowest_budget","highest_budget","genresRegex","RegExp","fetchSortMoviesAsync1","fetchSortMoviesAsync2","obj","flags","source","string","JSON","stringify","fetchFilterMovies","checkboxes","callRevenueChange","higher","callGenreChange","join","regex","lowest","highest","Typography","gutterBottom","Slider","defaultValue","valueLabelDisplay","step","marks","min","FormControlLabel","control","Checkbox","checked","handleGenreChange","RadioGroup","handleBudgetChange","Radio","FormGroup","row","above2Billion","handleRevenueChange","above1Billion","above500Million","isSortMoviesFetching","Filters_options","isSortMoviesLoaded","compose","FranchisesPage","isFranchisesFecthing","isFranchisesLoaded","Year","years","fetchMoviesByYear","isMoviesByYearFetching","buttonsByYear","isMoviesByYearLoaded","App","unSubscribeFromAuth","setCurrentUser","unsubscribeFromAuth","onAuthStateChanged","onSnapshot","snapshot","path","Wishlist","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","Genres","Franchises","MoviesReducer","action","userReducer","rootReducer","combineReducers","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddc46fc0.chunk.js","sourcesContent":["var map = {\n\t\"./Actors/Brad Pitt.jpg\": 200,\n\t\"./Actors/Bradley Cooper.jpg\": 201,\n\t\"./Actors/Christian Bale.jpg\": 202,\n\t\"./Actors/Harrison Ford.jpg\": 203,\n\t\"./Actors/Johnny Depp.jpg\": 204,\n\t\"./Actors/Leonardo DiCaprio.jpg\": 205,\n\t\"./Actors/Robert De Niro.jpg\": 206,\n\t\"./Actors/Robert Downey Jr.jpg\": 207,\n\t\"./Actors/Tom Cruise.jpg\": 208,\n\t\"./Actors/Tom Hanks.jpg\": 209,\n\t\"./Actress/Cate Blanchett.jpg\": 210,\n\t\"./Actress/Emma Stone.jpg\": 211,\n\t\"./Actress/Eva Green.jpg\": 212,\n\t\"./Actress/Jennifer Lawrence.jpg\": 213,\n\t\"./Actress/Kate Winslet.jpg\": 214,\n\t\"./Actress/Meryl Streep.jpg\": 215,\n\t\"./Actress/Natalie Portman.jpg\": 216,\n\t\"./Actress/Nicole Kidman.jpg\": 217,\n\t\"./Actress/Saoirse Ronan.jpg\": 218,\n\t\"./Actress/Scarlett Johansson.jpg\": 219,\n\t\"./Directors/Christopher Nolan.jpg\": 220,\n\t\"./Directors/David Fincher.jpg\": 221,\n\t\"./Directors/James Cameron.jpg\": 222,\n\t\"./Directors/Jon Favreau.jpg\": 223,\n\t\"./Directors/M. Night Shyamalan.jpg\": 224,\n\t\"./Directors/Martin Scorsese.jpg\": 225,\n\t\"./Directors/Quentin Tarantino.jpg\": 226,\n\t\"./Directors/Ridley Scott.jpg\": 227,\n\t\"./Directors/Sam Raimi.jpg\": 228,\n\t\"./Directors/Steven Spielberg.jpg\": 229\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 199;","export default __webpack_public_path__ + \"static/media/Brad Pitt.8a7eff09.jpg\";","export default __webpack_public_path__ + \"static/media/Bradley Cooper.2149ba85.jpg\";","export default __webpack_public_path__ + \"static/media/Christian Bale.cd1709f3.jpg\";","export default __webpack_public_path__ + \"static/media/Harrison Ford.9ead0d0b.jpg\";","export default __webpack_public_path__ + \"static/media/Johnny Depp.887b6a65.jpg\";","export default __webpack_public_path__ + \"static/media/Leonardo DiCaprio.1ad79425.jpg\";","export default __webpack_public_path__ + \"static/media/Robert De Niro.36d4b9dd.jpg\";","export default __webpack_public_path__ + \"static/media/Robert Downey Jr.7f367049.jpg\";","export default __webpack_public_path__ + \"static/media/Tom Cruise.057255ae.jpg\";","export default __webpack_public_path__ + \"static/media/Tom Hanks.ca64dc54.jpg\";","export default __webpack_public_path__ + \"static/media/Cate Blanchett.640fb27b.jpg\";","export default __webpack_public_path__ + \"static/media/Emma Stone.9d8182aa.jpg\";","export default __webpack_public_path__ + \"static/media/Eva Green.3551cdf8.jpg\";","export default __webpack_public_path__ + \"static/media/Jennifer Lawrence.6a5021bc.jpg\";","export default __webpack_public_path__ + \"static/media/Kate Winslet.16093a26.jpg\";","export default __webpack_public_path__ + \"static/media/Meryl Streep.abd3bc95.jpg\";","export default __webpack_public_path__ + \"static/media/Natalie Portman.93476c7e.jpg\";","export default __webpack_public_path__ + \"static/media/Nicole Kidman.bf3b03fb.jpg\";","export default __webpack_public_path__ + \"static/media/Saoirse Ronan.159a4961.jpg\";","export default __webpack_public_path__ + \"static/media/Scarlett Johansson.49043c52.jpg\";","export default __webpack_public_path__ + \"static/media/Christopher Nolan.89291e74.jpg\";","export default __webpack_public_path__ + \"static/media/David Fincher.66e766e4.jpg\";","export default __webpack_public_path__ + \"static/media/James Cameron.66e535d7.jpg\";","export default __webpack_public_path__ + \"static/media/Jon Favreau.25993906.jpg\";","export default __webpack_public_path__ + \"static/media/M. Night Shyamalan.0cd41160.jpg\";","export default __webpack_public_path__ + \"static/media/Martin Scorsese.1d12b43d.jpg\";","export default __webpack_public_path__ + \"static/media/Quentin Tarantino.2d220c71.jpg\";","export default __webpack_public_path__ + \"static/media/Ridley Scott.5224aa2f.jpg\";","export default __webpack_public_path__ + \"static/media/Sam Raimi.4c44d0ec.jpg\";","export default __webpack_public_path__ + \"static/media/Steven Spielberg.60b046b0.jpg\";","import firebase from \"firebase/app\";\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst config={\r\n    apiKey: \"AIzaSyAvfPJVBlYjFwmgogvetg7tfx1kQ1CBMAY\",\r\n    authDomain: \"mr-movies-493ea.firebaseapp.com\",\r\n    projectId: \"mr-movies-493ea\",\r\n    storageBucket: \"mr-movies-493ea.appspot.com\",\r\n    messagingSenderId: \"583896887382\",\r\n    appId: \"1:583896887382:web:16eb6dc8f16d6f806c4bf7\",\r\n    measurementId: \"G-2XQZBJF09V\"\r\n};\r\n\r\nexport const createUserProfileDocument=async(userAuth,addtionalData)=>{\r\n    if(!userAuth){\r\n        return;\r\n    }\r\n\r\n    const userRef=firestore.doc(`users/${userAuth.uid}`);\r\n    const snapshot=await userRef.get();\r\n    if(!snapshot.exists){\r\n        const {displayName,email}=userAuth;\r\n        const createdAt=new Date();\r\n        try{\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                wishlist:[],\r\n                recentlyViewed:[],\r\n                ...addtionalData\r\n            })\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    return userRef;\r\n    \r\n};\r\n\r\nexport const addTitleToRecentlyViewedFirestore=async(userId,titleId,recentlyViewed)=>{\r\n    const userRef=firestore.doc(`users/${userId}`)\r\n    const newSet=new Set([titleId,...recentlyViewed])\r\n    await userRef.update({\r\n        recentlyViewed:[...newSet].slice(0,15)\r\n    })\r\n}\r\n\r\nexport const addTitleToWishListFirestore=async (userId,titleId,wishlist)=>{\r\n    const userRef=firestore.doc(`users/${userId}`);\r\n    const newSet=new Set([...wishlist,titleId]);\r\n    console.log(userId,titleId,wishlist);\r\n    await userRef.update({\r\n        wishlist:[...newSet]\r\n    })\r\n}\r\n\r\nexport const removeTitleFromWishlistFirestore=async(userId,titleId,wishlist)=>{\r\n    const userRef=firestore.doc(`users/${userId}`);\r\n    wishlist.splice(wishlist.indexOf(titleId),1);\r\n    await userRef.update({\r\n        wishlist:[...wishlist]\r\n    })\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth=firebase.auth();\r\nexport const firestore=firebase.firestore();\r\n\r\nconst provider=new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt:'select_account'});\r\nexport const signInWithGoogle=async ()=>{\r\n    await auth.signInWithPopup(provider);\r\n};\r\n\r\nexport default firebase;","import { createSelector } from \"reselect\";\r\n\r\nconst selectMovies=state=>state.movies;\r\n\r\nexport const selectGenreMovies=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.genreMovies\r\n)\r\n\r\nexport const selectIsGenreMoviesFetching=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.isFetching\r\n)\r\n\r\nexport const selectIsGenreMoviesLoaded=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.genreMovies.length>0\r\n)\r\n\r\nexport const selectFranchises=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.franchises\r\n)\r\n\r\nexport const selectIsFranchisesFetching=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.isFetchingFranchises\r\n)\r\n\r\nexport const selectIsFranchisesLoaded=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.franchises.length>0\r\n)\r\n\r\nexport const selectMovieWithId=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.movieWithId\r\n)\r\n\r\nexport const selectMovieWithIdFetching=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.isFetchingMovie\r\n)\r\n\r\nexport const selectMovieWithIdLoaded=createSelector(\r\n    [selectMovies],\r\n    movies=>!!movies.movieWithId\r\n)\r\n\r\nexport const selectMoviesByYear=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.moviesByYear\r\n)\r\n\r\nexport const selectMoviesByYearFetching=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.isFetchingMoviesByYear\r\n)\r\n\r\nexport const selectMoviesByYearLoaded=createSelector(\r\n    [selectMovies],\r\n    movies=>!!movies.moviesByYear\r\n)\r\n\r\nexport const selectWishlist=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.wishlist\r\n)\r\n\r\nexport const selectIsWishlistFetching=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.isFetchingWishlist\r\n)\r\n\r\nexport const selectIsWishlistLoaded=createSelector(\r\n    [selectMovies],\r\n    movies=>!!movies.wishlist\r\n)\r\n\r\nexport const selectRecentlyViewed=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.recentlyViewed\r\n)\r\n\r\nexport const selectIsRecentlyViewedFetching=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.isFetchingRecentlyViewed\r\n)\r\n\r\nexport const selectIsRecentlyViewedLoaded=createSelector(\r\n    [selectMovies],\r\n    movies=>!!movies.recentlyViewed\r\n)\r\n\r\nexport const selectSearchMovies=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.searchMovies\r\n)\r\n\r\nexport const selectSearchMoviesFetching=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.isSearching\r\n)\r\n\r\nexport const selectSearchMoviesLoaded=createSelector(\r\n    [selectMovies],\r\n    movies=>!!movies.searchMovies\r\n)\r\n\r\nexport const selectSuggestions=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.suggestions\r\n)\r\n\r\nexport const selectSuggestionsFetching=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.isSuggesting\r\n)\r\n\r\nexport const selectSuggestionsLoaded=createSelector(\r\n    [selectMovies],\r\n    movies=>!!movies.suggestions\r\n)\r\n\r\nexport const selectTopMovies=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.topMovies\r\n)\r\n\r\nexport const selectTopMoviesFetching=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.isFetchingTop\r\n)\r\n\r\nexport const selectTopMoviesLoaded=createSelector(\r\n    [selectMovies],\r\n    movies=>!!movies.topMovies\r\n)\r\n\r\nexport const selectTopHits=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.topHits\r\n)\r\n\r\nexport const selectTopHitsFetching=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.isFetchingTopHits\r\n)\r\n\r\nexport const selectTopHitsLoaded=createSelector(\r\n    [selectMovies],\r\n    movies=>!!movies.topHits\r\n)\r\n\r\nexport const selectRecents=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.recents\r\n)\r\n\r\nexport const selectRecentsFetching=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.isFetchingRecents\r\n)\r\n\r\nexport const selectRecentsLoaded=createSelector(\r\n    [selectMovies],\r\n    movies=>!!movies.recents\r\n)\r\n\r\nexport const selectTitleSuggestions=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.titleSuggestions\r\n)\r\n\r\nexport const selectTitleSuggestionsFetching=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.isFetchingTitleSuggestions\r\n)\r\n\r\nexport const selectTitleSuggestionsLoaded=createSelector(\r\n    [selectMovies],\r\n    movies=>!!movies.titleSuggestions\r\n)\r\n\r\nexport const selectSortMovies=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.sortMovies\r\n)\r\n\r\nexport const selectSortMoviesFetching=createSelector(\r\n    [selectMovies],\r\n    movies=>movies.isFetchingSort\r\n)\r\n\r\nexport const selectSortMoviesLoaded=createSelector(\r\n    [selectMovies],\r\n    movies=>!!movies.sortMovies\r\n)\r\n    ","import { createSelector } from \"reselect\";\r\n\r\nconst selectUser=state=>state.user;\r\n\r\nexport const selectCurrentUser=createSelector(\r\n    [selectUser],\r\n    (user)=>user.currentUser\r\n)","export const UserActionTypes={\r\n    SET_CURRENT_USER:'SET_CURRENT_USER',\r\n    ADD_TO_WISHLIST:'ADD_TO_WISHLIST',\r\n    REMOVE_FROM_WISHLIST:'REMOVE_FROM_WISHLIST',\r\n    ADD_TO_RECENTLY_VIEWED:'ADD_TO_RECENTLY_VIEWED'\r\n}","import { addTitleToRecentlyViewedFirestore, addTitleToWishListFirestore, removeTitleFromWishlistFirestore } from '../../firebase/firebase.util';\r\nimport {UserActionTypes} from './user.types';\r\n\r\nexport const setCurrentUser=user=>({\r\n    type:UserActionTypes.SET_CURRENT_USER,\r\n    payload:user\r\n});\r\n\r\n\r\nexport const addTitleToRecentlyViewed=()=>({\r\n    type:UserActionTypes.ADD_TO_RECENTLY_VIEWED\r\n})\r\n\r\nexport const addTitleToRecentlyViewedAsync=(userId,titleId,recentlyViewed)=>{\r\n    return async dispatch=>{\r\n        await addTitleToRecentlyViewedFirestore(userId,titleId,recentlyViewed);\r\n        dispatch(addTitleToRecentlyViewed())\r\n    }\r\n}\r\n\r\nexport const addTitleToWishList=()=>({\r\n    type:UserActionTypes.ADD_TO_WISHLIST\r\n})\r\n\r\nexport const addTitleToWishlistAsync=(userId,titleId,wishlist)=>{\r\n    return async dispatch=>{\r\n        await addTitleToWishListFirestore(userId,titleId,wishlist);\r\n        dispatch(addTitleToWishList())\r\n    }\r\n}\r\n\r\nexport const removeTitleFromWishlist=()=>({\r\n    type:UserActionTypes.REMOVE_FROM_WISHLIST\r\n})\r\n\r\nexport const removeTitleFromWishlistAsync=(userId,titleId,wishlist)=>{\r\n    return async dispatch=>{\r\n        await removeTitleFromWishlistFirestore(userId,titleId,wishlist);\r\n        dispatch(removeTitleFromWishlist())\r\n    }\r\n}","import React from 'react';\r\nimport './TitleCards.styles.scss';\r\nimport { Button, Card,CardDeck, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\r\nimport NumberFormat from 'react-number-format';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectCurrentUser } from '../../redux/user/user.selector';\r\nimport { addTitleToWishlistAsync, removeTitleFromWishlistAsync } from '../../redux/user/user.actions';\r\nimport { Rating } from '@material-ui/lab';\r\nimport { AiFillStar,AiFillInfoCircle } from \"react-icons/ai\";\r\nimport { Modal,Grow } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst Arrow = ({ text, className }) => {\r\n  return (\r\n    <div\r\n      className={className}\r\n    >{text}</div>\r\n  );\r\n};\r\n\r\n\r\nconst ArrowLeft = Arrow({ text: <div>&#11164;</div>, className: 'arrow-prev' });\r\nconst ArrowRight = Arrow({ text: <div>&#11166;</div>, className: 'arrow-next' });\r\n\r\n\r\nconst getModalStyle=()=> {\r\n  const top = 100;\r\n  const left = 100;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    backgroundColor: '#282828',\r\n    border: '2px solid black',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n\r\n  cardText:{\r\n    color:'white'\r\n  },\r\n\r\n  modalButton:{\r\n    display:'flex',\r\n    justifyContent:'center',\r\n  },\r\n\r\n  addWishlist:{\r\n    backgroundColor:'green',\r\n    border:'0px'\r\n  },\r\n\r\n  removeWishlist:{\r\n    backgroundColor:'red',\r\n    border:'0px'\r\n  },\r\n\r\n  login:{\r\n    backgroundColor:'blue',\r\n    border:'0px'\r\n  }\r\n}));\r\n\r\n\r\nconst TitleCards=({titles,horizantal,NoBio,long_cards,currentUser,addTitleToWishlistAsync,removeTitleFromWishlistAsync})=>{\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n  let movies=[];\r\n  let movies1=titles['movies'];\r\n  const [showBio,setShowBio]=useState(false);\r\n  const [showInfo,setShowInfo]=useState(false);\r\n  const [modalMovie,setModalMovie]=useState(null);\r\n\r\n  Object.keys(movies1).map((id)=>movies.push(movies1[id]));\r\n\r\n  const addToWishlist=(titleId)=>{\r\n    addTitleToWishlistAsync(currentUser.id,titleId,currentUser.wishlist);\r\n  }\r\n\r\n  const removeFromWishlist=(titleId)=>{\r\n    removeTitleFromWishlistAsync(currentUser.id,titleId,currentUser.wishlist)\r\n  }\r\n\r\n\r\n  const handleClose = () => {\r\n    setShowInfo(false);\r\n  };\r\n\r\n\r\n  return(\r\n    <div className='container-fluid cards-display'>\r\n      <Modal open={showInfo} onClose={handleClose}>\r\n      <Grow in={showInfo} {...(showInfo ? { timeout: 1000 } : {})}>\r\n          <div style={modalStyle} className={classes.paper}>\r\n          {\r\n            modalMovie?\r\n            <div>\r\n              {\r\n                    modalMovie.actors?\r\n                  <p className={classes.cardText}><b>Actors: </b>\r\n                  {\r\n                  modalMovie.actors.slice(0,5).map((actor,index)=><Link to={`/searchPage/${actor}`} key={index} className={classes.cardText}>{(index?', ':'')+actor}</Link>)\r\n                  }\r\n                  </p>\r\n                  :null\r\n              }\r\n              {\r\n                    modalMovie.directors?\r\n                  <p className={classes.cardText}><b>Directors: </b> \r\n                  {\r\n                  modalMovie.directors.slice(0,5).map((director,index)=><Link to={`/searchPage/${director}`} key={index} className={classes.cardText}>{(index?', ':'')+director}</Link>)\r\n                  }\r\n                  </p>\r\n                  :null\r\n              }\r\n              {\r\n                    modalMovie.genres?\r\n                  <p className={classes.cardText}><b>Genres: </b> \r\n                  {\r\n                  modalMovie.genres.slice(0,5).map((genre,index)=><Link to={`/searchPage/${genre}`} key={index} className={classes.cardText}>{(index?', ':'')+genre}</Link>)\r\n                  }\r\n                  </p>\r\n                  :null\r\n              }\r\n              <div className={classes.modalButton}>\r\n              { currentUser?\r\n                    <div>\r\n                       { \r\n                      currentUser.wishlist.includes(modalMovie._id)?\r\n                      <Button onClick={()=>{removeFromWishlist(modalMovie._id)}} className={classes.removeWishlist}>Remove from Wishlist</Button>\r\n                     :\r\n                    <Button onClick={()=>{addToWishlist(modalMovie._id)}} className={classes.addWishlist}>Add to WishList</Button>\r\n                    }\r\n                    </div>\r\n                    :\r\n                    <Button disabled className={classes.login}>Login to Wishlist</Button>\r\n                  }\r\n              </div>\r\n            </div>\r\n            :null\r\n          }\r\n        </div>\r\n        </Grow>\r\n      </Modal>\r\n      {\r\n        titles['bio']&&!NoBio?\r\n        (<div className='bio'>\r\n          {titles['bio']['date_of_birth']?<h6 className='text-details'><b>Date of birth:</b> {titles['bio']['date_of_birth']}</h6>:<div></div>}\r\n          {titles['bio']['place_of_birth']?<h6 className='text-details'><b>Place of birth:</b> {titles['bio']['place_of_birth']}</h6>:<div></div>}\r\n          {titles['bio']['height']?<h6 className='text-details'><b>Height:</b> {titles['bio']['height']}m</h6>:<div></div>}\r\n          {titles['bio']['spouses_string']?<h6 className='text-details'><b>Spouse(s):</b> {titles['bio']['spouses_string']}</h6>:<div></div>}\r\n          {\r\n            titles['bio']['bio']?\r\n            <div className='bio-details text-details'><b>Bio: </b>\r\n          {titles['bio']['bio'].slice(0,500)}\r\n          {\r\n            showBio?\r\n            <span>\r\n              <span>{titles['bio']['bio'].slice(501,)}</span>\r\n              <span className=\"showbio-click\" onClick={()=>setShowBio(!showBio)}> <b>(less...)</b></span>\r\n            </span>\r\n            :\r\n            <span className=\"showbio-click\" onClick={()=>setShowBio(!showBio)}> <b>(more...)</b></span>\r\n          }\r\n          </div>:\r\n          <div></div>\r\n          }\r\n        </div>\r\n        ):\r\n        (<div></div>)\r\n      }\r\n    {\r\n      horizantal?\r\n      (\r\n        <ScrollMenu\r\n          data=\r\n            {\r\n              movies.map((movie)=>\r\n              (movie.poster_path)?\r\n              (\r\n                <div key={movie._id}>\r\n                <Card key={movie._id} className='titleCard'>\r\n                {\r\n                  window.innerWidth>768?\r\n                  <Card.Header className='card-text'>\r\n                  <Link className='card-text' to={`/movies/getMovieWithId/${movie._id}`}><b>{movie.title.toUpperCase()}</b></Link>\r\n                  </Card.Header>:\r\n                  null\r\n                }\r\n                <Link className='linkMovie' to={`/movies/getMovieWithId/${movie._id}`}>\r\n                  <Card.Img className='img'  variant=\"top\" src={movie.poster_path} alt=\"No Image\" />\r\n                </Link>\r\n                {\r\n                  window.innerWidth>768?\r\n                  <Card.Body className='body-card'>\r\n                  <Card.Text className='card-text'><b>Release Date:</b> {movie.release_date}</Card.Text>\r\n                  {\r\n                    movie.actors?\r\n                  <Card.Text className='card-text'><b>Actors:</b>\r\n                  {\r\n                  movie.actors.slice(0,4).map((actor,index)=><Link to={`/searchPage/${actor}`} key={index} className='card-text'>{(index?',':'')+actor}</Link>)\r\n                  }\r\n                  </Card.Text>\r\n                  :<div></div>\r\n                  }\r\n                  {\r\n                    movie.directors?\r\n                  <Card.Text className='card-text'><b>Directors:</b> \r\n                  {\r\n                  movie.directors.slice(0,3).map((director,index)=><Link to={`/searchPage/${director}`} key={index} className='card-text'>{(index?',':'')+director}</Link>)\r\n                  }\r\n                  </Card.Text>\r\n                  :<div></div>\r\n                  }\r\n                  <Card.Text className='card-text'><b>Rating: </b>\r\n                  <Rating value={movie.weighted_average_vote/2} precision={0.25} max={5} size=\"small\" readOnly/>\r\n                  {movie.weighted_average_vote} <span className='vote_count'>(<NumberFormat value={movie.total_votes} displayType={'text'} thousandSeparator={true}/>)</span></Card.Text>\r\n                  </Card.Body>:\r\n                  <Card.Body className='body-card'>\r\n                    <div className='left-side'>\r\n                    <Card.Text className='card-text'>{movie.release_date}</Card.Text>\r\n                    <Card.Text className='card-text'><AiFillStar color='#FDCC0D'/>{movie.weighted_average_vote}/10 <span className='vote_count'>(<NumberFormat value={movie.total_votes} displayType={'text'} thousandSeparator={true}/>)</span></Card.Text>\r\n                    </div>\r\n                    <AiFillInfoCircle color='black' className='info' onClick={()=>{setModalMovie(movie);setShowInfo(true);}}/>\r\n                    \r\n                  </Card.Body>\r\n                }\r\n                {\r\n                  window.innerWidth>768?\r\n                  <Card.Footer className=\"card-foot\">\r\n                  { currentUser?\r\n                    <div>\r\n                       { \r\n                      currentUser.wishlist.includes(movie._id)?\r\n                      <Button onClick={()=>{removeFromWishlist(movie._id)}} className=\"remove-button\">Remove from Wishlist</Button>\r\n                     :\r\n                    <Button onClick={()=>{addToWishlist(movie._id)}} className=\"add-button\">Add to WishList</Button>\r\n                    }\r\n                    </div>\r\n                    :\r\n                    <Button disabled className=\"login\">Login to Wishlist</Button>\r\n                  }\r\n                </Card.Footer>:\r\n                null\r\n                }\r\n                </Card>\r\n                </div>\r\n              ):(<div key={movie._id}/>)\r\n             )\r\n            }\r\n          arrowLeft={ArrowLeft}\r\n          arrowRight={ArrowRight}\r\n          wheel={false}\r\n          alignCenter={false}\r\n        />\r\n      )\r\n      :\r\n      (\r\n        long_cards?\r\n        (\r\n          <CardDeck>\r\n            {\r\n              movies.map((movie)=>\r\n              (movie.poster_path)?\r\n              (\r\n                <div key={movie._id}>\r\n                  <Card key={movie._id} className='titleCard long-cards'>\r\n                  <Card.Body>\r\n                  <div className='row'>\r\n                    <div className='col-md-2'>\r\n                    <Link className='linkMovie' to={`/movies/getMovieWithId/${movie._id}`}>\r\n                    <Card.Img className='img'  variant=\"top\" src={movie.poster_path} alt=\"No Image\" />\r\n                    </Link>\r\n                    </div>\r\n                    <div className='col-md-6'>\r\n                    <Card.Text className='titleName'><b>{movie.title}</b></Card.Text>\r\n                    {\r\n                    movie.actors?\r\n                  <Card.Text className='card-text'><b>Actors:</b> {movie.actors.slice(0,4).map((actor,index)=>\r\n                  <Link to={`/searchPage/${actor}`} key={index} className='card-text'>{(index?',':'')+actor}</Link>)}</Card.Text>\r\n                  :<div></div>\r\n                  }\r\n                  {\r\n                    movie.directors?\r\n                  <Card.Text className='card-text'><b>Directors:</b> {movie.directors.slice(0,2).map((director,index)=>\r\n                  <Link to={`/searchPage/${director}`} key={index} className='card-text'>{(index?',':'')+director}</Link>)}</Card.Text>\r\n                  :<div></div>\r\n                  }\r\n                  <Card.Text className='card-text'><b>Rating: </b>\r\n                  <Rating value={movie.weighted_average_vote/2} precision={0.25} max={5} size=\"small\" readOnly/>\r\n                  {movie.weighted_average_vote} <span className='vote_count'>(<NumberFormat value={movie.total_votes} displayType={'text'} thousandSeparator={true}/>)</span></Card.Text>\r\n                  { currentUser?\r\n                    <div>\r\n                       { \r\n                      currentUser.wishlist.includes(movie._id)?\r\n                      <Button onClick={()=>{removeFromWishlist(movie._id)}} className=\"remove-button\">Remove from Wishlist</Button>\r\n                     :\r\n                    <Button onClick={()=>{addToWishlist(movie._id)}} className=\"add-button\">Add to WishList</Button>\r\n                    }\r\n                    </div>\r\n                    :\r\n                    <Button disabled className=\"login\">Login to Wishlist</Button>\r\n                  }\r\n                    </div>\r\n                    <div className='col-md-4'>\r\n                    <Card.Text className='card-text'><b>Budget:</b> <NumberFormat value={movie.budget} displayType={'text'} thousandSeparator={true} prefix={'$'} /></Card.Text>\r\n                    <Card.Text className='card-text'><b>Revenue:</b> <NumberFormat value={movie.revenue} displayType={'text'} thousandSeparator={true} prefix={'$'} /></Card.Text>\r\n                    <Card.Text className='card-text'><b>Total Number of votes:</b> <NumberFormat value={movie.total_votes} displayType={'text'} thousandSeparator={true} /></Card.Text>\r\n                    <Card.Text className='card-text'><b>Runtime:</b> {movie.runtime} min</Card.Text>\r\n                    <Card.Text className='card-text'><b>Release Date:</b> {movie.release_date}</Card.Text>\r\n                    </div>\r\n                    </div>\r\n                  </Card.Body>\r\n                  </Card>\r\n                </div>\r\n              ):(<div key={movie._id}/>)\r\n             )\r\n            }\r\n          </CardDeck>\r\n        ):\r\n        (\r\n          <Row md={4} sm={2} xs={2} className='horizantal-cards'>\r\n            {\r\n              movies.map((movie)=>\r\n              <Col key={movie._id} className='per-column'>\r\n              {\r\n                \r\n              (movie.poster_path)?\r\n              (\r\n                <div>\r\n                  <Card key={movie._id} className='titleCard'>\r\n                {\r\n                  window.innerWidth>768?\r\n                  <Card.Header className='card-text'>\r\n                  <Link className='card-text' to={`/movies/getMovieWithId/${movie._id}`}><b>{movie.title.toUpperCase()}</b></Link>\r\n                  </Card.Header>:\r\n                  null\r\n                }\r\n                <Link className='linkMovie' to={`/movies/getMovieWithId/${movie._id}`}>\r\n                  <Card.Img className='img'  variant=\"top\" src={movie.poster_path} alt=\"No Image\" />\r\n                </Link>\r\n                {\r\n                  window.innerWidth>768?\r\n                  <Card.Body className='body-card'>\r\n                  <Card.Text className='card-text'><b>Release Date:</b> {movie.release_date}</Card.Text>\r\n                  {\r\n                    movie.actors?\r\n                  <Card.Text className='card-text'><b>Actors:</b>\r\n                  {\r\n                  movie.actors.slice(0,4).map((actor,index)=><Link to={`/searchPage/${actor}`} key={index} className='card-text'>{(index?',':'')+actor}</Link>)\r\n                  }\r\n                  </Card.Text>\r\n                  :<div></div>\r\n                  }\r\n                  {\r\n                    movie.directors?\r\n                  <Card.Text className='card-text'><b>Directors:</b> \r\n                  {\r\n                  movie.directors.slice(0,3).map((director,index)=><Link to={`/searchPage/${director}`} key={index} className='card-text'>{(index?',':'')+director}</Link>)\r\n                  }\r\n                  </Card.Text>\r\n                  :<div></div>\r\n                  }\r\n                  <Card.Text className='card-text'><b>Rating: </b>\r\n                  <Rating value={movie.weighted_average_vote/2} precision={0.25} max={5} size=\"small\" readOnly/>\r\n                  {movie.weighted_average_vote} <span className='vote_count'>(<NumberFormat value={movie.total_votes} displayType={'text'} thousandSeparator={true}/>)</span></Card.Text>\r\n                  </Card.Body>:\r\n                  <Card.Body className='body-card'>\r\n                    <div className='left-side'>\r\n                    <Card.Text className='card-text'>{movie.release_date}</Card.Text>\r\n                    <Card.Text className='card-text'><AiFillStar color='#FDCC0D'/>{movie.weighted_average_vote}/10 <span className='vote_count'>(<NumberFormat value={movie.total_votes} displayType={'text'} thousandSeparator={true}/>)</span></Card.Text>\r\n                    </div>\r\n                    <AiFillInfoCircle color='black' className='info' onClick={()=>{setModalMovie(movie);setShowInfo(true);}}/>\r\n                    \r\n                  </Card.Body>\r\n                }\r\n                {\r\n                  window.innerWidth>768?\r\n                  <Card.Footer className=\"card-foot\">\r\n                  { currentUser?\r\n                    <div>\r\n                       { \r\n                      currentUser.wishlist.includes(movie._id)?\r\n                      <Button onClick={()=>{removeFromWishlist(movie._id)}} className=\"remove-button\">Remove from Wishlist</Button>\r\n                     :\r\n                    <Button onClick={()=>{addToWishlist(movie._id)}} className=\"add-button\">Add to WishList</Button>\r\n                    }\r\n                    </div>\r\n                    :\r\n                    <Button disabled className=\"login\">Login to Wishlist</Button>\r\n                  }\r\n                </Card.Footer>:\r\n                null\r\n                }\r\n                </Card>\r\n                </div>\r\n              ):(<div key={movie._id}/>)\r\n              }\r\n              </Col>\r\n             )\r\n            }\r\n        </Row>\r\n        )\r\n      )\r\n\r\n    }\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps=createStructuredSelector({\r\n  currentUser:selectCurrentUser\r\n})\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n  addTitleToWishlistAsync:(userId,titleId,wishlist)=>dispatch(addTitleToWishlistAsync(userId,titleId,wishlist)),\r\n  removeTitleFromWishlistAsync:(userId,titleId,wishlist)=>dispatch(removeTitleFromWishlistAsync(userId,titleId,wishlist))\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TitleCards);","import styled from 'styled-components';\n\nexport const SpinnerOverlay = styled.div`\n  height: 60vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SpinnerContainer = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 3px solid rgba(195, 195, 195, 0.6);\n  border-radius: 50%;\n  border-top-color: #636767;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\r\nimport { SpinnerContainer,SpinnerOverlay } from './with-spinner.styles';\r\n\r\nconst WithSpinner=WrapperComponent=>{\r\n    const Spinner = ({isLoading,...otherProps})=>{\r\n        return isLoading?(\r\n            <SpinnerOverlay>\r\n                <SpinnerContainer/>\r\n            </SpinnerOverlay>\r\n        ):(\r\n            <WrapperComponent { ...otherProps}/>\r\n        );\r\n    };\r\n    return Spinner;\r\n}\r\n\r\nexport default WithSpinner;","const TitlesActionTypes={\r\n    FETCH_GENRE_MOVIES_START:'FETCH_GENRE_MOVIES_START',\r\n    FETCH_GENRE_MOVIES_SUCCESS:'FETCH_GENRE_MOVIES_SUCCESS',\r\n    FETCH_GENRE_MOVIES_FAILURE:'FETCH_GENRE_MOVIES_FAILURE',\r\n\r\n    FETCH_FRANCHISES_START:'FETCH_FRANCHISES_START',\r\n    FETCH_FRANCHISES_SUCCESS:'FETCH_FRANCHISES_SUCCESS',\r\n    FETCH_FRANCHISES_FAILURE:'FETCH_FRANCHISES_FAILURE',\r\n\r\n    FETCH_MOVIE_WITH_ID_START:'FETCH_MOVIE_WITH_ID_START',\r\n    FETCH_MOVIE_WITH_ID_SUCCESS:'FETCH_MOVIE_WITH_ID_SUCCESS',\r\n    FETCH_MOVIE_WITH_ID_FAILURE:'FETCH_MOVIE_WITH_ID_FAILURE',\r\n\r\n    FETCH_WISHLIST_START:'FETCH_WISHLIST_START',\r\n    FETCH_WISHLIST_SUCCESS:'FETCH_WISHLIST_SUCCESS',\r\n    FETCH_WISHLIST_FAILURE:'FETCH_WISHLIST_FAILURE',\r\n\r\n    FETCH_SEARCH_START:'FETCH_SEARCH_START',\r\n    FETCH_SEARCH_SUCCESS:'FETCH_SEARCH_SUCCESS',\r\n    FETCH_SEARCH_FAILURE:'FETCH_SEARCH_FAILURE',\r\n\r\n    FETCH_SUGGESTIONS_START:'FETCH_SUGGESTIONS_START',\r\n    FETCH_SUGGESTIONS_SUCCESS:'FETCH_SUGGESTIONS_SUCCESS',\r\n    FETCH_SUGGESTIONS_FAILURE:'FETCH_SUGGESTIONS_SUCCESS',\r\n\r\n    FETCH_TOP_MOVIES_START:'FETCH_TOP_MOVIES_START',\r\n    FETCH_TOP_MOVIES_SUCCESS:'FETCH_TOP_MOVIES_SUCCESS',\r\n    FETCH_TOP_MOVIES_FAILURE:'FETCH_TOP_MOVIES_FAILURE',\r\n\r\n    FETCH_RECENTS_START:'FETCH_RECENTS_START',\r\n    FETCH_RECENTS_SUCCESS:'FETCH_RECENTS_SUCCESS',\r\n    FETCH_RECENTS_FAILURE:'FETCH_RECENTS_FAILURE',\r\n\r\n    FETCH_RECENTLY_VIEWED_START:'FETCH_RECENTLY_VIEWED_START',\r\n    FETCH_RECENTLY_VIEWED_SUCCESS:'FETCH_RECENTLY_VIEWED_SUCCESS',\r\n    FETCH_RECENTLY_VIEWED_FAILURE:'FETCH_RECENTLY_VIEWED_FAILURE',\r\n\r\n    FETCH_TOP_HITS_START:'FETCH_TOP_HITS_START',\r\n    FETCH_TOP_HITS_SUCCESS:'FETCH_TOP_HITS_SUCCESS',\r\n    FETCH_TOP_HITS_FAILURE:'FETCH_TOP_HITS_FAILURE',\r\n\r\n    FETCH_MOVIES_BY_YEAR_START:'FETCH_MOVIES_BY_YEAR_START',\r\n    FETCH_MOVIES_BY_YEAR_SUCCESS:'FETCH_MOVIES_BY_YEAR_SUCCESS',\r\n    FETCH_MOVIES_BY_YEAR_FAILURE:'FETCH_MOVIES_BY_YEAR_FAILURE',\r\n\r\n    FETCH_SORT_MOVIES_START: 'FETCH_SORT_MOVIES_START',\r\n    FETCH_SORT_MOVIES_SUCCESS: 'FETCH_SORT_MOVIES_SUCCESS',\r\n    FETCH_SORT_MOVIES_FAILURE: 'FETCH_SORT_MOVIES_FAILURE',\r\n\r\n    FETCH_TITLE_SUGGESTIONS_START: 'FETCH_TITLE_SUGGESTIONS_START',\r\n    FETCH_TITLE_SUGGESTIONS_SUCCESS: 'FETCH_TITLE_SUGGESTIONS_SUCCESS',\r\n    FETCH_TITLE_SUGGESTIONS_FAILURE: 'FETCH_TITLE_SUGGESTIONS_FAILURE'\r\n};\r\n\r\nexport default TitlesActionTypes;","import TitlesActionTypes from \"./titles.types\";\r\nimport axios from \"axios\";\r\n\r\nlet PORT='';\r\n// PORT='http://localhost:1020';\r\n\r\nexport const fetchGenreMoviesStart=()=>({\r\n    type:TitlesActionTypes.FETCH_GENRE_MOVIES_START\r\n})\r\n\r\nexport const fetchGenreMoviesSuccess=(moviesMap)=>({\r\n    type:TitlesActionTypes.FETCH_GENRE_MOVIES_SUCCESS,\r\n    payload:moviesMap\r\n})\r\n\r\nexport const fetchGenreMoviesFailure=(message)=>({\r\n    type:TitlesActionTypes.FETCH_GENRE_MOVIES_FAILURE,\r\n    payload:message\r\n})\r\n\r\nexport const fetchGenreMoviesAsync=()=>{\r\n    return dispatch=>{\r\n        dispatch(fetchGenreMoviesStart());\r\n\r\n        axios.get(PORT+'/genreMovies')\r\n        .then(response=>{\r\n            console.log(response);\r\n            const moviesMap=response.data;\r\n            dispatch(fetchGenreMoviesSuccess(moviesMap));\r\n        })\r\n        .catch(err=>dispatch(fetchGenreMoviesFailure(err)))\r\n    }\r\n}\r\n\r\nexport const fetchFranchisesStart=()=>({\r\n    type:TitlesActionTypes.FETCH_FRANCHISES_START\r\n})\r\n\r\nexport const fetchFranchisesSuccess=(moviesMap)=>({\r\n    type:TitlesActionTypes.FETCH_FRANCHISES_SUCCESS,\r\n    payload:moviesMap\r\n})\r\n\r\nexport const fetchFranchisesFailure=(message)=>({\r\n    type:TitlesActionTypes.FETCH_FRANCHISES_FAILURE,\r\n    payload:message\r\n})\r\n\r\nexport const fetchFranchisesAsync=()=>{\r\n    return dispatch=>{\r\n        dispatch(fetchFranchisesStart());\r\n\r\n        axios.get(PORT+'/franchises')\r\n        .then(response=>{\r\n            console.log(response);\r\n            const moviesMap=response.data;\r\n            dispatch(fetchFranchisesSuccess(moviesMap));\r\n        })\r\n        .catch(err=>dispatch(fetchFranchisesFailure(err)))\r\n    }\r\n}\r\n\r\nexport const fetchMovieWithIdStart=()=>({\r\n    type:TitlesActionTypes.FETCH_MOVIE_WITH_ID_START\r\n})\r\n\r\nexport const fetchMovieWithIdSuccess=(movie)=>({\r\n    type:TitlesActionTypes.FETCH_MOVIE_WITH_ID_SUCCESS,\r\n    payload:movie\r\n})\r\n\r\nexport const fetchMovieWithIdFailure=(message)=>({\r\n    type:TitlesActionTypes.FETCH_MOVIE_WITH_ID_FAILURE,\r\n    payload:message\r\n})\r\n\r\nexport const fetchMovieWithIdAsync=(movieId)=>{\r\n    return dispatch=>{\r\n        dispatch(fetchMovieWithIdStart());\r\n        axios.post(PORT+'/getMovieWithId',\r\n        {\r\n            id:movieId\r\n        },{\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }})\r\n        .then(response=>{\r\n            const movie=response.data;\r\n            dispatch(fetchMovieWithIdSuccess(movie));\r\n        })\r\n        .catch(err=>dispatch(fetchMovieWithIdFailure(err)))\r\n    }\r\n}\r\n\r\nexport const fetchMoviesByYearStart=()=>({\r\n    type:TitlesActionTypes.FETCH_MOVIES_BY_YEAR_START\r\n})\r\n\r\nexport const fetchMoviesByYearSuccess=(movies)=>({\r\n    type:TitlesActionTypes.FETCH_MOVIES_BY_YEAR_SUCCESS,\r\n    payload:movies\r\n})\r\n\r\nexport const fetchMoviesByYearFailure=(message)=>({\r\n    type:TitlesActionTypes.FETCH_MOVIES_BY_YEAR_FAILURE,\r\n    payload:message\r\n})\r\n\r\nexport const fetchMoviesByYearAsync=(year)=>{\r\n    return dispatch=>{\r\n        dispatch(fetchMoviesByYearStart());\r\n        axios.post(PORT+'/byYear',\r\n        {\r\n            year:year\r\n        },{\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }})\r\n        .then(response=>{\r\n            const movies=response.data;\r\n            dispatch(fetchMoviesByYearSuccess(movies));\r\n        })\r\n        .catch(err=>dispatch(fetchMoviesByYearFailure(err)))\r\n    }\r\n}\r\n\r\nexport const fetchTitleSuggestionsStart=()=>({\r\n    type:TitlesActionTypes.FETCH_TITLE_SUGGESTIONS_START\r\n})\r\n\r\nexport const fetchTitleSuggestionsSuccess=(movies)=>({\r\n    type:TitlesActionTypes.FETCH_TITLE_SUGGESTIONS_SUCCESS,\r\n    payload:movies\r\n})\r\n\r\nexport const fetchTitleSuggestionsFailure=(message)=>({\r\n    type:TitlesActionTypes.FETCH_TITLE_SUGGESTIONS_FAILURE,\r\n    payload:message\r\n})\r\n\r\nexport const fetchTitleSuggestionsAsync=(movie_id)=>{\r\n    return dispatch=>{\r\n        dispatch(fetchTitleSuggestionsStart());\r\n        axios.post(PORT+'/titleSuggestions',\r\n        {\r\n            movie_id:movie_id\r\n        },{\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }})\r\n        .then(response=>{\r\n            const movies=response.data;\r\n            dispatch(fetchTitleSuggestionsSuccess(movies));\r\n        })\r\n        .catch(err=>dispatch(fetchTitleSuggestionsFailure(err)))\r\n    }\r\n}\r\n\r\nexport const fetchWishlistStart=()=>({\r\n    type:TitlesActionTypes.FETCH_WISHLIST_START\r\n})\r\n\r\nexport const fetchWishlistSuccess=(movieMap)=>({\r\n    type:TitlesActionTypes.FETCH_WISHLIST_SUCCESS,\r\n    payload:movieMap\r\n})\r\n\r\nexport const fetchWishlistFailure=(message)=>({\r\n    type:TitlesActionTypes.FETCH_WISHLIST_FAILURE,\r\n    payload:message\r\n})\r\n\r\nexport const fetchWishlistAsync=(movieIds)=>{\r\n    return async dispatch=>{\r\n        dispatch(fetchWishlistStart());\r\n        Promise.all(\r\n            movieIds.map(\r\n                (movieId)=>{\r\n                    return axios.post(\r\n                        PORT+'/getMovieWithId',\r\n                        {\r\n                            id:movieId\r\n                        },{\r\n                        headers:{\r\n                            'Content-Type': 'application/json'\r\n                        }}\r\n                    ).then((response)=>{\r\n                        return response.data\r\n                    }).catch(err=>dispatch(fetchWishlistFailure(err)));\r\n                }\r\n            )\r\n        ).then((value)=>{\r\n            dispatch(fetchWishlistSuccess({bio:null,movies:value}))\r\n        });\r\n    }        \r\n}\r\n\r\nexport const fetchRecentlyViewedStart=()=>({\r\n    type:TitlesActionTypes.FETCH_RECENTLY_VIEWED_START\r\n})\r\n\r\nexport const fetchRecentlyViewedSuccess=(movieMap)=>({\r\n    type:TitlesActionTypes.FETCH_RECENTLY_VIEWED_SUCCESS,\r\n    payload:movieMap\r\n})\r\n\r\nexport const fetchRecentlyViewedFailure=(message)=>({\r\n    type:TitlesActionTypes.FETCH_RECENTLY_VIEWED_FAILURE,\r\n    payload:message\r\n})\r\n\r\nexport const fetchRecentlyViewedAsync=(movieIds)=>{\r\n    return async dispatch=>{\r\n        dispatch(fetchRecentlyViewedStart());\r\n        Promise.all(\r\n            movieIds.map(\r\n                (movieId)=>{\r\n                    return axios.post(\r\n                        PORT+'/getMovieWithId',\r\n                        {\r\n                            id:movieId\r\n                        },{\r\n                        headers:{\r\n                            'Content-Type': 'application/json'\r\n                        }}\r\n                    ).then((response)=>{\r\n                        return response.data\r\n                    }).catch(err=>dispatch(fetchRecentlyViewedFailure(err)));\r\n                }\r\n            )\r\n        ).then((value)=>{\r\n            dispatch(fetchRecentlyViewedSuccess({bio:null,movies:value}))\r\n        });\r\n    }        \r\n}\r\n\r\nexport const fetchSearchStart=()=>({\r\n    type:TitlesActionTypes.FETCH_SEARCH_START\r\n});\r\n\r\nexport const fetchSearchSuccess=(movieMap)=>({\r\n    type:TitlesActionTypes.FETCH_SEARCH_SUCCESS,\r\n    payload:movieMap\r\n});\r\n\r\nexport const fetchSearchFailure=(message)=>({\r\n    title:TitlesActionTypes.FETCH_SEARCH_FAILURE,\r\n    payload:message\r\n});\r\n\r\nexport const fetchSearchAsync=(value)=>{\r\n    return dispatch=>{\r\n        dispatch(fetchSearchStart());\r\n        axios.post(PORT+'/search',\r\n        {\r\n            value:value,\r\n            number:30\r\n        },\r\n        {\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n        }}\r\n        )\r\n        .then(response=>{\r\n            const movies=response.data;\r\n            dispatch(fetchSearchSuccess(movies));\r\n        }).catch(err=>dispatch(fetchSearchFailure(err)));\r\n    }\r\n}\r\n\r\nexport const fetchSuggestionsStart=()=>({\r\n    type:TitlesActionTypes.FETCH_SUGGESTIONS_START\r\n})\r\n\r\nexport const fetchSuggestionsSucess=(suggestions)=>({\r\n    type:TitlesActionTypes.FETCH_SUGGESTIONS_SUCCESS,\r\n    payload:suggestions\r\n})\r\n\r\nexport const fetchSuggestionsFailure=(message)=>({\r\n    type:TitlesActionTypes.FETCH_SUGGESTIONS_FAILURE,\r\n    payload:message\r\n})\r\n\r\nexport const fetchSuggestionsAsync=(value)=>{\r\n    return dispatch=>{\r\n        dispatch(fetchSuggestionsStart());\r\n        axios.post(PORT+'/searchSuggestions',\r\n        {\r\n            value:value\r\n        },\r\n        {\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n        }}\r\n        )\r\n        .then(response=>{\r\n            const search=response.data;\r\n            dispatch(fetchSuggestionsSucess(search));\r\n        }).catch(err=>dispatch(fetchSuggestionsFailure(err)));\r\n    }\r\n}\r\n\r\nexport const fetchTopMoviesStart=()=>({\r\n    type:TitlesActionTypes.FETCH_TOP_MOVIES_START,\r\n})\r\n\r\nexport const fetchTopMoviesSuccess=(movies)=>({\r\n    type:TitlesActionTypes.FETCH_TOP_MOVIES_SUCCESS,\r\n    payload:movies\r\n})\r\n\r\nexport const fetchTopMoviesFailure=(message)=>({\r\n    type:TitlesActionTypes.FETCH_TOP_MOVIES_FAILURE,\r\n    payload:message\r\n})\r\n\r\nexport const fetchTopMoviesAsync=()=>{\r\n    return dispatch=>{\r\n        dispatch(fetchTopMoviesStart());\r\n        axios.get(PORT+'/top250').then(\r\n            (response)=>{\r\n                dispatch(fetchTopMoviesSuccess(response.data))\r\n            }\r\n        ).catch(err=>dispatch(fetchTopMoviesFailure(err)))\r\n    }\r\n}\r\n\r\nexport const fetchTopHitsStart=()=>({\r\n    type:TitlesActionTypes.FETCH_TOP_HITS_START,\r\n})\r\n\r\nexport const fetchTopHitsSuccess=(movies)=>({\r\n    type:TitlesActionTypes.FETCH_TOP_HITS_SUCCESS,\r\n    payload:movies\r\n})\r\n\r\nexport const fetchTopHitsFailure=(message)=>({\r\n    type:TitlesActionTypes.FETCH_TOP_HITS_FAILURE,\r\n    payload:message\r\n})\r\n\r\nexport const fetchTopHitsAsync=()=>{\r\n    return dispatch=>{\r\n        dispatch(fetchTopHitsStart());\r\n        axios.get(PORT+'/topHits').then(\r\n            (response)=>{\r\n                dispatch(fetchTopHitsSuccess(response.data))\r\n            }\r\n        ).catch(err=>dispatch(fetchTopHitsFailure(err)))\r\n    }\r\n}\r\n\r\nexport const fetchRecentsStart=()=>({\r\n    type:TitlesActionTypes.FETCH_RECENTS_START,\r\n})\r\n\r\nexport const fetchRecentsSuccess=(movies)=>({\r\n    type:TitlesActionTypes.FETCH_RECENTS_SUCCESS,\r\n    payload:movies\r\n})\r\n\r\nexport const fetchRecentsFailure=(message)=>({\r\n    type:TitlesActionTypes.FETCH_RECENTS_FAILURE,\r\n    payload:message\r\n})\r\n\r\nexport const fetchRecentsAsync=()=>{\r\n    return dispatch=>{\r\n        dispatch(fetchRecentsStart());\r\n        axios.get(PORT+'/recents').then(\r\n            (response)=>{\r\n                dispatch(fetchRecentsSuccess(response.data))\r\n            }\r\n        ).catch(err=>dispatch(fetchRecentsFailure(err)))\r\n    }\r\n}\r\n\r\nexport const fetchSortMoviesStart=()=>({\r\n    type:TitlesActionTypes.FETCH_SORT_MOVIES_START\r\n})\r\n\r\nexport const fetchSortMoviesSuccess=(movies)=>({\r\n    type:TitlesActionTypes.FETCH_SORT_MOVIES_SUCCESS,\r\n    payload:movies\r\n})\r\n\r\nexport const fetchSortMoviesFailure=(message)=>({\r\n    type:TitlesActionTypes.FETCH_SORT_MOVIES_FAILURE,\r\n    payload:message\r\n})\r\n\r\nexport const fetchSortMoviesAsync=(value=\"id\",query={})=>{\r\n    return dispatch=>{\r\n        dispatch(fetchSortMoviesStart());\r\n        axios.post(PORT+'/sortMovies',\r\n        {\r\n            column:value,\r\n            sorted:-1,\r\n            query:query\r\n        },\r\n        {\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n        }}\r\n        )\r\n        .then(response=>{\r\n            const movies=response.data;\r\n            dispatch(fetchSortMoviesSuccess(movies));\r\n        }).catch(err=>dispatch(fetchSortMoviesFailure(err)));\r\n    }\r\n}","import React from 'react';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectGenreMovies, selectIsGenreMoviesFetching,selectIsGenreMoviesLoaded } from '../../redux/titles/titles.selector';\r\nimport './genre.styles.scss';\r\nimport { connect } from 'react-redux';\r\nimport TitleCards from '../../components/TitleCard/TitleCards.component';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport { fetchGenreMoviesAsync } from '../../redux/titles/titles.actions';\r\nimport { Link } from 'react-router-dom';\r\nimport { MdKeyboardArrowRight } from \"react-icons/md\";\r\nconst TitleCardsWithSpinner=WithSpinner(TitleCards);\r\nclass GenrePage extends React.Component{\r\n    \r\n    componentDidMount(){\r\n        window.scrollTo(0, 0);\r\n        const {fetchGenreMoviesAsync}=this.props;\r\n        fetchGenreMoviesAsync();\r\n    }\r\n\r\n    render(){\r\n        const {genreMovies,isGenreMoviesFecthing}=this.props;\r\n        return(\r\n            <div className='genre-movies'>\r\n                {\r\n                   Object.keys(genreMovies).map((heading)=>(\r\n                       <div key={heading}>\r\n                           <h2 key={heading}><Link className='heading' to={`/searchPage/${heading}`}>{heading.toUpperCase()} <MdKeyboardArrowRight/></Link></h2>\r\n                           <TitleCardsWithSpinner isLoading={isGenreMoviesFecthing} key={genreMovies[heading].id}\r\n                           titles={genreMovies[heading]} horizantal {...this.props}/>\r\n                       </div>\r\n                   ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=createStructuredSelector({\r\n    genreMovies:selectGenreMovies,\r\n    isGenreMoviesFecthing:selectIsGenreMoviesFetching,\r\n    isGenreMoviesLoaded:selectIsGenreMoviesLoaded\r\n})\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    fetchGenreMoviesAsync:()=>dispatch(fetchGenreMoviesAsync())\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(GenrePage);","import React from 'react';\r\nimport './ReviewJumbotron.styles.scss';\r\nimport { Jumbotron } from 'react-bootstrap';\r\nimport { Rating } from '@material-ui/lab';\r\nimport { useState } from 'react';\r\nconst ReviewJumbotron=(props)=>{\r\n    const {review}=props;\r\n    const [showmore,setShowmore]=useState(false);\r\n    return(\r\n        <Jumbotron className='review'>\r\n            <div className='review-details'>\r\n                <h6 className='text_details'>\"<b>{review.review_summary}</b>\"</h6>\r\n                <Rating className='rating_tmdb' precision={0.2} max={10} value={parseInt(review.rating)} size=\"small\" readOnly />\r\n                <p className=\"review_text\">{review.review_date}</p>\r\n                {\r\n                    showmore?\r\n                    <p className=\"review_text\">\r\n                        <span>{review.review_text.slice(0,)} </span><span className=\"showmore\" onClick={()=>setShowmore(false)}><b>(less...)</b></span>\r\n                    </p>:\r\n                    <p className=\"review_text\">\r\n                    <span>{review.review_text.slice(0,500)} </span><span className=\"showmore\" onClick={()=>setShowmore(true)}><b>(more...)</b></span>\r\n                    </p>\r\n                }\r\n                <p className=\"review_user\">-{review.user_id}</p>\r\n            </div>\r\n        </Jumbotron>\r\n    )\r\n}\r\n\r\nexport default ReviewJumbotron;","export default __webpack_public_path__ + \"static/media/emoji.542945b8.png\";","import React, { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport './DiscussionsJumbotron.styles.scss';\r\nimport { TextField,Button as MaterialButton,InputAdornment } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Picker from 'emoji-picker-react';\r\nimport Emoji from './Assets/emoji.png';\r\nimport { Modal } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n    input1: {\r\n      width:\"500px\",\r\n      \r\n    }\r\n  };\r\n\r\n  const getModalStyle=()=> {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 350,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\nconst DiscussionsJumbotron=(props)=>{\r\n    const classes = useStyles();\r\n    const {comment,deleteComment,currentUser,discussions,replyComment}=props;\r\n    const [showReply,setShowReply]=useState('false');\r\n    const [reply,setReply]=useState('');\r\n    const [emojiPicker,setEmojiPicker]=useState(false);\r\n    const [modalStyle] = useState(getModalStyle);\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <Picker onEmojiClick={(event,emojiObject)=>{setReply(reply+emojiObject.emoji)}}/>\r\n        </div>\r\n      );\r\n\r\n      const handleOpen = () => {\r\n        setEmojiPicker(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setEmojiPicker(false);\r\n      };\r\n\r\n    return(\r\n        <div className='discussion'>\r\n            <div className='review-details'>\r\n            <span className=\"review_text\">&#8618; </span>\r\n            <span>\r\n            <span className=\"review_text\">\r\n                <span>{comment.user_name} - </span><span>{comment.comment_date}</span></span>\r\n                <div style={{\"marginLeft\":'17px'}} >\r\n                <p className=\"review_text\"><span>{comment.comment}</span>\r\n                {currentUser&&currentUser.id===comment.user_id?\r\n                    <span className=\"delete-comment\" onClick={()=>deleteComment(discussions,comment.id)}>&#128465;</span>:\r\n                    <span></span>\r\n                }\r\n                </p>\r\n                </div>\r\n                {\r\n                    showReply?\r\n                    (currentUser?\r\n                      <Button className='reply-button' variant='outline-secondary' onClick={()=>setShowReply(!showReply)}>Reply</Button>:\r\n                      <Button className='login-reply' variant='outline-secondary' disabled>Login to reply</Button>)\r\n                    :\r\n                    <Button className='reply-button' variant='outline-secondary' onClick={()=>setShowReply(!showReply)}>Close</Button>\r\n                }\r\n                {\r\n                    !showReply?\r\n                    <div>\r\n                        <Modal open={emojiPicker} onClose={handleClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\r\n                            {body}\r\n                        </Modal>\r\n                        <TextField variant=\"outlined\" className='reply' label=\"Reply\" \r\n                    value={reply} onChange={(event)=>setReply(event.target.value)} size=\"small\"\r\n                    InputProps={{ startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            <img className='emoji-picker' onClick={handleOpen} src={Emoji} alt=\"Emoji\"/>\r\n                        </InputAdornment>\r\n                      ),\r\n                        classes: { input: props.classes.input1 } }}/>\r\n                    <MaterialButton onClick={()=>replyComment(discussions,comment.id,reply)}>&#10148;</MaterialButton>\r\n                    </div>\r\n                    :\r\n                    <div></div>\r\n                }\r\n            </span>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(DiscussionsJumbotron);","import React from 'react';\r\nimport './Discussions.styles.scss';\r\nimport DiscussionsJumbotron from './DiscussionsJumbotron.component';\r\nimport { TextField,InputAdornment } from '@material-ui/core';\r\nimport { useState,useEffect } from 'react';\r\nimport dateFormat from 'dateformat';\r\nimport axios from 'axios';\r\nimport { Button } from 'react-bootstrap';\r\nimport Picker from 'emoji-picker-react';\r\nimport Emoji from './Assets/emoji.png';\r\nimport { Modal } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst getModalStyle=()=> {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 350,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\nconst Discussions=(props)=>{\r\n    const classes = useStyles();\r\n    const {movieWithId,currentUser}=props;\r\n    let movie_id=movieWithId._id;\r\n    const [comment,setComment]=useState('');\r\n    const [discussions,setDiscussions]=useState([]);\r\n    const [emojiPicker,setEmojiPicker]=useState(false);\r\n    const [modalStyle] = useState(getModalStyle);\r\n    let PORT='';\r\n    // PORT='http://localhost:1020';\r\n\r\n    useEffect(()=>{\r\n        if(movieWithId){\r\n            setDiscussions(movieWithId.discussions)\r\n        }\r\n    },[movieWithId,setDiscussions])\r\n\r\n    const addComment=async (event)=>{\r\n        event.preventDefault();\r\n        let comment_to_add={comment_date:dateFormat(new Date(),'d mmmm yyyy hh:MM:ss tt'),\r\n        user_id:currentUser.id,user_name:currentUser.displayName,comment:comment,\r\n        id:Math.floor(Math.random() * 10000000),discussions:[]};\r\n        setDiscussions([...discussions,comment_to_add]);\r\n        await axios.post(PORT+'/addComment',\r\n        {\r\n            movie_id:movie_id,\r\n            comment_to_add:comment_to_add\r\n        },{\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }});\r\n        setComment('');\r\n    }\r\n\r\n    const deleteComment=async (sliceDiscussions,comment_id)=>{\r\n        for(let i in sliceDiscussions){\r\n            if(sliceDiscussions[i].id===comment_id){\r\n                sliceDiscussions.splice(i,1);\r\n                setDiscussions([...discussions]);\r\n                }\r\n            else{\r\n                deleteComment(sliceDiscussions[i].discussions,comment_id);\r\n            }\r\n        }\r\n        await axios.post(PORT+'/deleteComment',\r\n        {\r\n            movie_id:movie_id,\r\n            comment_id:comment_id\r\n        },{\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }})\r\n    }\r\n\r\n    const replyComment=async (sliceDiscussions,comment_id,comment)=>{\r\n        for(let i in sliceDiscussions){\r\n            if(sliceDiscussions[i].id===comment_id){\r\n                let comment_to_add={comment_date:dateFormat(new Date(),'d mmmm yyyy hh:MM:ss tt'),\r\n                user_id:currentUser.id,user_name:currentUser.displayName,comment:comment,\r\n                id:Math.floor(Math.random() * 10000000),discussions:[]};\r\n                sliceDiscussions[i].discussions.push(comment_to_add);\r\n                setDiscussions([...discussions]);\r\n                await axios.post(PORT+'/replyComment',\r\n                {\r\n                    movie_id:movie_id,\r\n                    comment_to_add:comment_to_add,\r\n                    comment_id:comment_id\r\n                },{\r\n                headers:{\r\n                    'Content-Type': 'application/json'\r\n                }})\r\n            }\r\n            else{\r\n                replyComment(sliceDiscussions[i].discussions,comment_id,comment);\r\n            }\r\n        }\r\n    }\r\n\r\n    const DisplayDiscussions=(props)=>{\r\n        const {comment}=props;\r\n        const nestedDiscussions=comment.discussions.map((child)=>{\r\n            return <DisplayDiscussions key={child.id} comment={child}/>\r\n        })\r\n        let marginLeft='40px'; \r\n        if(window.innerWidth<768){\r\n            marginLeft='15px';\r\n        }\r\n\r\n        return(\r\n            <div style={{\"marginLeft\": marginLeft,\"marginTop\":\"10px\"}}>\r\n                <DiscussionsJumbotron deleteComment={deleteComment} replyComment={replyComment}\r\n                comment={comment} key={comment.id} \r\n                currentUser={currentUser} discussions={discussions}/>\r\n                {nestedDiscussions}\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <Picker onEmojiClick={(event,emojiObject)=>{setComment(comment+emojiObject.emoji)}}/>\r\n        </div>\r\n      );\r\n\r\n      const handleOpen = () => {\r\n        setEmojiPicker(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setEmojiPicker(false);\r\n      };\r\n\r\n    return(\r\n        <div className='discussions'>\r\n            {\r\n                discussions.map((discussion)=>{\r\n                    return(\r\n                        <DisplayDiscussions key={discussion.id} comment={discussion} {...props}/>\r\n                    )\r\n                })\r\n            }\r\n            <Modal open={emojiPicker} onClose={handleClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\r\n        {body}\r\n      </Modal>\r\n            <TextField className='comment' id=\"discussions\" label=\"Add a comment\" \r\n            value={comment} onChange={(event)=>setComment(event.target.value)} \r\n            multiline rows={3} variant=\"outlined\"\r\n            InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                      <img className='emoji-picker' onClick={handleOpen} src={Emoji} alt=\"Emoji\"/>\r\n                  </InputAdornment>\r\n                ),\r\n              }}/>\r\n            <div className='row'>\r\n                <div className='col-md-12'>\r\n                {\r\n                    currentUser?\r\n                    <Button className='add-comment' onClick={addComment}>Add a Comment</Button>:\r\n                    <Button className='login' disabled>Login to comment</Button>\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Discussions;","import React, { useEffect } from 'react';\r\nimport './TitleDetails.styles.scss';\r\nimport {Jumbotron} from 'react-bootstrap';\r\nimport Moment from 'react-moment';\r\nimport NumberFormat from 'react-number-format';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectCurrentUser } from '../../redux/user/user.selector';\r\nimport { addTitleToRecentlyViewedAsync, addTitleToWishlistAsync, removeTitleFromWishlistAsync } from '../../redux/user/user.actions';\r\nimport { Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { selectTitleSuggestions, selectTitleSuggestionsFetching, selectTitleSuggestionsLoaded } from '../../redux/titles/titles.selector';\r\nimport { fetchTitleSuggestionsAsync } from '../../redux/titles/titles.actions';\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\nimport TitleCards from '../TitleCard/TitleCards.component';\r\nimport { Rating } from '@material-ui/lab';\r\nimport ReviewJumbotron from './ReviewJumbotron.component';\r\nimport Discussions from './Discussions.component';\r\nconst TitleCardsWithSpinner=WithSpinner(TitleCards);\r\nconst TitleDetails=(props)=>{\r\n    let PORT='';\r\n    // PORT='http://localhost:1020';\r\n    window.scroll(0,0);\r\n    const {movieWithId,currentUser,addTitleToWishlistAsync,removeTitleFromWishlistAsync,fetchTitleSuggestionsAsync,\r\n    titleSuggestions,isTitleSuggestionsFetching,addTitleToRecentlyViewedAsync}=props;\r\n    const addToWishlist=(titleId)=>{\r\n        addTitleToWishlistAsync(currentUser.id,titleId,currentUser.wishlist);\r\n      }\r\n    \r\n      const removeFromWishlist=(titleId)=>{\r\n        removeTitleFromWishlistAsync(currentUser.id,titleId,currentUser.wishlist)\r\n      }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchTitleSuggestionsAsync(movieWithId._id)\r\n    },[movieWithId._id,fetchTitleSuggestionsAsync])\r\n\r\n    useEffect(()=>{\r\n        (async function(){\r\n                await axios.post(PORT+'/hits',\r\n                {\r\n                    movie_id:movieWithId._id\r\n                },{\r\n                headers:{\r\n                    'Content-Type': 'application/json'\r\n                }})\r\n            })();\r\n    },[movieWithId._id,PORT])\r\n\r\n    useEffect(()=>{\r\n        if(currentUser){\r\n            addTitleToRecentlyViewedAsync(currentUser.id,movieWithId._id,currentUser.recentlyViewed)\r\n        }\r\n    },[movieWithId._id,currentUser,addTitleToRecentlyViewedAsync])\r\n\r\n    return(\r\n        <Jumbotron>\r\n        <div className='container-fluid title-description'>\r\n            <div className='row'>\r\n            <div className='col-md-5'>\r\n                    <img className='img' src={movieWithId.poster_path} alt='IMAGE_ALT'/>\r\n            </div>\r\n            <div className='col-md-7 title-details'>\r\n                <h2 className=\"title_name\"><b>{movieWithId.title}</b></h2>\r\n                <h6 className='text_details'>{movieWithId.genres.map((genre,index)=><Link to={`/searchPage/${genre}`} className='text_details underline_text' key={index}>{(index?', ':'')+genre}</Link>)}</h6>\r\n                { currentUser?\r\n                    <div>\r\n                       { \r\n                      currentUser.wishlist.includes(movieWithId._id)?\r\n                      <Button onClick={()=>{removeFromWishlist(movieWithId._id)}} className=\"remove-button\">Remove from Wishlist</Button>\r\n                     :\r\n                    <Button onClick={()=>{addToWishlist(movieWithId._id)}} className=\"add-button\">Add to WishList</Button>\r\n                    }\r\n                    </div>\r\n                    :\r\n                    <Button disabled className=\"login\">Login to Wishlist</Button>\r\n                  }\r\n                <h6 className='text_details'><b>Plot:</b><br/>{movieWithId.overview}</h6>\r\n                <h6 className='text_details'><b>Actors:</b><br/>{movieWithId.actors.slice(0,15).map((actor,index)=><Link to={`/searchPage/${actor}`} className='text_details underline_text' key={index}>{(index?', ':'')+actor}</Link>)}</h6>\r\n                <h6 className='text_details'><b>Directors:</b><br/>{movieWithId.directors.slice(0,5).map((director,index)=><Link to={`/searchPage/${director}`} className='text_details underline_text' key={index}>{(index?', ':'')+director}</Link>)}</h6>\r\n                {\r\n                    movieWithId.release_date?\r\n                    <h6 className='text_details'><b>Release Date: </b><Moment format=\"dddd, Do MMMM YYYY\">{movieWithId.release_date.toLocaleString()}</Moment></h6>:\r\n                    <div></div>\r\n                }\r\n                <h6 className='text_details'><b>Runtime: </b>{parseInt(movieWithId.runtime)} min</h6>\r\n                <h6 className='text_details'><b>Budget: </b><NumberFormat value={movieWithId.budget} displayType={'text'} thousandSeparator={true} prefix={'$'} /></h6>\r\n                <h6 className='text_details'><b>Revenue: </b><NumberFormat value={movieWithId.revenue} displayType={'text'} thousandSeparator={true} prefix={'$'} /></h6>\r\n                <h6 className='text_details'><b>Content Rating: </b>{movieWithId.content_rating}</h6>\r\n                <h6 className='text_details'><b>Production Company: </b>{movieWithId.production_company}</h6>\r\n                <h4 className='rating'><b>Rating:</b><br/>\r\n                <Rating className='rating_tmdb'size='small' precision={0.2} max={10} value={movieWithId.weighted_average_vote} readOnly />\r\n                {movieWithId.weighted_average_vote} <span className='vote_count'>(<NumberFormat value={movieWithId.total_votes} displayType={'text'} thousandSeparator={true}/> votes)</span>\r\n                </h4>\r\n                <h6 className='text_details'>\r\n                <a href={`https://www.imdb.com/title/${movieWithId.imdb_id}`} target='_blank' rel=\"noopener noreferrer\" >\r\n                <img className='imdb' src=\"https://www.logosurfer.com/wp-content/uploads/2018/03/imdb-logo_1.png\" alt='IMAGE_ALT'/>\r\n                </a>\r\n                <a target=\"_blank\" href={`http://www.google.com/search?q=${movieWithId.title} (film)`} rel=\"noopener noreferrer\">\r\n                <img className='google' src=\"https://www.logosurfer.com/wp-content/uploads/2018/03/google-logo_1.png\" alt='IMAGE_ALT'/>\r\n                </a>\r\n                <a target=\"_blank\" href={`https://www.rottentomatoes.com/${movieWithId.rotten}`} rel=\"noopener noreferrer\">\r\n                <img className='rotten' src=\"/Rotten.png\" alt='IMAGE_ALT'/>\r\n                </a>\r\n                </h6>\r\n            </div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='col-md-12'>\r\n                    <h4 className='discussions'>Discussions:</h4>\r\n                    <Discussions {...props}/>\r\n                </div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='col-md-12'>\r\n                    <h4 className='similar'>Similar Titles:</h4>\r\n                    <TitleCardsWithSpinner titles={titleSuggestions} isLoading={isTitleSuggestionsFetching} {...props} horizantal />\r\n                </div>\r\n            </div>\r\n            {\r\n                movieWithId.reviews.length>0?\r\n                (\r\n                    <div className='row'>\r\n                <div className='col-md-12'>\r\n                    <h4 className='reviews'>Reviews:</h4>\r\n                    {\r\n                        movieWithId.reviews.map((review)=>(\r\n                            <ReviewJumbotron review={review} key={review._id}/>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n                ):\r\n                (<div></div>)\r\n            }\r\n        </div>\r\n        </Jumbotron>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=createStructuredSelector({\r\n    currentUser:selectCurrentUser,\r\n    titleSuggestions:selectTitleSuggestions,\r\n    isTitleSuggestionsFetching:selectTitleSuggestionsFetching,\r\n    isTitleSuggestionsLoaded:selectTitleSuggestionsLoaded\r\n})\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    fetchTitleSuggestionsAsync:(movie_id)=>dispatch(fetchTitleSuggestionsAsync(movie_id)),\r\n    addTitleToWishlistAsync:(userId,titleId,wishlist)=>dispatch(addTitleToWishlistAsync(userId,titleId,wishlist)),\r\n    removeTitleFromWishlistAsync:(userId,titleId,wishlist)=>dispatch(removeTitleFromWishlistAsync(userId,titleId,wishlist)),\r\n    addTitleToRecentlyViewedAsync:(userId,titleId,recentlyViewed)=>dispatch(addTitleToRecentlyViewedAsync(userId,titleId,recentlyViewed))\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TitleDetails);","import React from 'react';\r\nimport { fetchMovieWithIdAsync } from '../../redux/titles/titles.actions';\r\nimport './TitleDescription.styles.scss';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectMovieWithId, selectMovieWithIdFetching, selectMovieWithIdLoaded } from '../../redux/titles/titles.selector';\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\nimport TitleDetails from './TitleDetails.component';\r\nconst TitleDetailsWithSpinner=WithSpinner(TitleDetails);\r\nclass TitleDescription extends React.Component{\r\n    \r\n    componentDidMount(){\r\n        const {fetchMovieWithIdAsync}=this.props;\r\n        fetchMovieWithIdAsync(this.props.match.params.id);\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        const {fetchMovieWithIdAsync,movieWithId}=this.props;\r\n        if(movieWithId._id!==this.props.match.params.id){\r\n            fetchMovieWithIdAsync(this.props.match.params.id);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {movieWithId,isMovieWithIdfetching,isMovieWithIdLoaded}=this.props;\r\n        return(\r\n            <div className='title-description'>\r\n                <TitleDetailsWithSpinner isLoading={isMovieWithIdfetching&&!isMovieWithIdLoaded} movieWithId={movieWithId} {...this.props}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=createStructuredSelector({\r\n    movieWithId:selectMovieWithId,\r\n    isMovieWithIdfetching:selectMovieWithIdFetching,\r\n    isMovieWithIdLoaded:selectMovieWithIdLoaded,\r\n})\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    fetchMovieWithIdAsync:(id)=>dispatch(fetchMovieWithIdAsync(id))\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TitleDescription);\r\n","import React from 'react';\r\nimport {  fetchSuggestionsAsync } from '../../redux/titles/titles.actions';\r\nimport './search.styles.scss';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectSuggestions, selectSuggestionsFetching, selectSuggestionsLoaded } from '../../redux/titles/titles.selector';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport {TextField,Button,createTheme,ThemeProvider} from '@material-ui/core';\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport { Link } from 'react-router-dom';\r\nconst styles={\r\n    input:{\r\n        color:\"white\"\r\n    }\r\n}\r\nconst theme=createTheme({\r\n    overrides: {\r\n        MuiOutlinedInput:{\r\n            root:{\r\n                position: 'relative',\r\n                '& $notchedOutline': {\r\n                borderColor: 'rgba(255, 255, 255)',\r\n            }\r\n            }\r\n        },\r\n        MuiInputLabel: { // Name of the component ⚛️ / style sheet\r\n          root: { // Name of the rule\r\n            color: \"white\",\r\n            \"&$focused\": { // increase the specificity for the pseudo class\r\n              color: \"white\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n})\r\nclass SearchPage extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            search:''\r\n        }\r\n        this.handleChange=this.handleChange.bind(this);\r\n    }\r\n\r\n\r\n    handleChange=(event)=>{\r\n        event.preventDefault();\r\n        const {fetchSuggestionsAsync}=this.props;\r\n        const {name,value}=event.target;\r\n        this.setState({[name]:value},\r\n            fetchSuggestionsAsync(value))\r\n    }\r\n\r\n    handleChange1=(value)=>{\r\n        this.setState({'search':value})\r\n    }\r\n\r\n\r\n    render(){\r\n        const {search} =this.state;\r\n        const {suggestions,classes}=this.props;\r\n        return(\r\n            <div className='search-page'>\r\n                <h2 className=\"text-center search-title\">Search Across 10k+ Movies and 40k+ Actors and Directors</h2>\r\n                <div className='search-bar'>\r\n                    <ThemeProvider theme={theme}>\r\n                    <Autocomplete\r\n                        freeSolo\r\n                        id=\"searchField\"\r\n                        disableClearable\r\n                        options={suggestions}\r\n                        onChange={(event,value)=>this.handleChange1(value)}\r\n                        renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label=\"Movies/Actors/Directors/Plot/Genres\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            name=\"search\"\r\n                            value={search}\r\n                            onChange={this.handleChange}\r\n                            InputProps={{ ...params.InputProps,className: classes.input, type: 'search' }}\r\n                        />\r\n                        )}\r\n                    />\r\n                    </ThemeProvider>\r\n                </div>\r\n                <div className='searchButton'>\r\n                    <Link className=\"search-link\" to={`/searchPage/${this.state.search}`}>\r\n                        <Button variant=\"outlined\" type=\"submit\" color=\"inherit\" size=\"large\" value={search}>Search</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=createStructuredSelector({\r\n    suggestions:selectSuggestions,\r\n    isSuggestionsFetching:selectSuggestionsFetching,\r\n    isSuggestionsLoaded:selectSuggestionsLoaded,\r\n})\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    fetchSuggestionsAsync:(value)=>dispatch(fetchSuggestionsAsync(value))\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(SearchPage));","import React from 'react';\r\nimport { fetchSearchAsync } from '../../redux/titles/titles.actions';\r\nimport './SearchClick.styles.scss';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectSearchMovies, selectSearchMoviesFetching, selectSearchMoviesLoaded } from '../../redux/titles/titles.selector';\r\nimport TitleCards from '../../components/TitleCard/TitleCards.component';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nconst TitleCardsWithSpinner=WithSpinner(TitleCards);\r\n\r\nclass SearchClickPage extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            search_value:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.scroll(0,0);\r\n        const {fetchSearchAsync}=this.props;\r\n        this.setState({search_value:this.props.match.params.value},\r\n            ()=>fetchSearchAsync(this.state.search_value));\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        const {fetchSearchAsync}=this.props;\r\n        window.scroll(0,0);\r\n        if(this.state.search_value!==this.props.match.params.value){\r\n            this.setState({search_value:this.props.match.params.value},\r\n                ()=>fetchSearchAsync(this.state.search_value));\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {searchMovies,isSearchMoviesLoaded,isSearchMoviesFetching}=this.props;\r\n        return(\r\n            <div className='search-page'>\r\n            <h1 className='search-page-heading'><b>{this.state.search_value}</b></h1>\r\n            <TitleCardsWithSpinner isLoading={(!isSearchMoviesLoaded||isSearchMoviesFetching)} titles={searchMovies} {...this.props}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=createStructuredSelector({\r\n    searchMovies:selectSearchMovies,\r\n    isSearchMoviesFetching:selectSearchMoviesFetching,\r\n    isSearchMoviesLoaded:selectSearchMoviesLoaded\r\n})\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    fetchSearchAsync:(value)=>dispatch(fetchSearchAsync(value))\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchClickPage);","import React from 'react';\r\nimport './TableData.styles.scss';\r\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\r\nimport {Table,TableContainer,Paper,TableRow,TableCell,TableBody,TableHead} from '@material-ui/core';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body:{\r\n        color:'white'\r\n    }\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(even)': {\r\n            backgroundColor: '#686868',\r\n          },\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: '\t#505050',\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\n  const useStyles = makeStyles({\r\n    table:{\r\n        width:'100%'\r\n    }\r\n    \r\n  });\r\n\r\nconst TableData=(props)=>{\r\n    const {movies,imdb,history}=props;\r\n    const classes = useStyles();\r\n    let rank=1\r\n    return(\r\n        <div className='table-display'>\r\n            <div className='container-fluid'>\r\n                <div className='row'>\r\n                    <div className='movies col-md-12'>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={`${classes.table} table-data`} aria-label=\"simple table\">\r\n                        {\r\n                            window.innerWidth>768?\r\n                            <colgroup>\r\n                                <col style={{width:'10%'}}/>\r\n                                <col style={{width:'20%'}}/>\r\n                                <col style={{width:'30%'}}/>\r\n                                <col style={{width:'20%'}}/>\r\n                                <col style={{width:'20%'}}/>\r\n                            </colgroup>:\r\n                        <colgroup>\r\n                            <col style={{width:'18%'}}/>\r\n                            <col style={{width:'48%'}}/>\r\n                            <col style={{width:'17%'}}/>\r\n                            <col style={{width:'17%'}}/>\r\n                        </colgroup>\r\n                        }\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            {\r\n                                window.innerWidth>768?\r\n                                <StyledTableCell><h6><b>Rank</b></h6></StyledTableCell>:\r\n                                null\r\n                            }\r\n                            <StyledTableCell className='table-display-cell'><h6><b>Poster</b></h6></StyledTableCell>\r\n                            <StyledTableCell className='table-display-cell'><h6><b>Title</b></h6></StyledTableCell>\r\n                            <StyledTableCell align=\"right\" className='table-display-cell'><h6><b>Year</b></h6></StyledTableCell>\r\n                            <StyledTableCell align=\"right\" className='table-display-cell'><h6><b>Rating</b></h6></StyledTableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                            <TableBody >\r\n                            {movies.map((movie) => (\r\n                                <StyledTableRow key={movie._id} \r\n                                onClick={()=>{history.push(`/movies/getMovieWithId/${movie._id}`)}} className=\"title\" >\r\n                                    {\r\n                                        window.innerWidth>768?\r\n                                        <StyledTableCell align=\"left\"><b>{rank++}</b></StyledTableCell>:\r\n                                        null\r\n                                    }\r\n                                    <StyledTableCell className='table-display-cell' component=\"th\" scope=\"row\">\r\n                                        <img className='poster' src={movie.poster_path} alt=\"Coming soon\"/>\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell align=\"left\" className='table-display-cell'><b>{movie.title}</b></StyledTableCell>\r\n                                    <StyledTableCell align=\"right\" className='table-display-cell'>{movie.release_date.split('-')[0]}</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\" className='table-display-cell'>\r\n                                        {\r\n                                            imdb?\r\n                                            <div>{movie.weighted_average_vote}</div>:\r\n                                            <div></div>\r\n                                        }\r\n                                    </StyledTableCell>\r\n                                </StyledTableRow>\r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        </TableContainer>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableData;","import React from 'react';\r\nimport './topmovies.styles.scss';\r\nimport {connect} from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectTopMovies, selectTopMoviesFetching, selectTopMoviesLoaded } from '../../redux/titles/titles.selector';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport TableDisplay from '../../components/TableDisplay/TableDisplay.component';\r\nimport { fetchTopMoviesAsync } from '../../redux/titles/titles.actions';\r\nconst TableDisplayWithSpinner=WithSpinner(TableDisplay);\r\nclass TopMoviesPage extends React.Component{\r\n\r\n    componentDidMount(){\r\n        window.scrollTo(0, 0);\r\n        const {fetchTopMoviesAsync}=this.props;\r\n        fetchTopMoviesAsync();\r\n    }\r\n\r\n    render(){\r\n        const {topMovies,isTopMoviesfetching,isTopMoviesLoaded}=this.props;\r\n        return(\r\n            <div className='top-movies'>\r\n                <TableDisplayWithSpinner isLoading={(!isTopMoviesLoaded&&isTopMoviesfetching)} topMovies={topMovies} {...this.props}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=createStructuredSelector({\r\n    topMovies:selectTopMovies,\r\n    isTopMoviesfetching:selectTopMoviesFetching,\r\n    isTopMoviesLoaded:selectTopMoviesLoaded\r\n})\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    fetchTopMoviesAsync:()=>dispatch(fetchTopMoviesAsync())\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TopMoviesPage);","import React from 'react';\r\nimport TableData from './TableData.component';\r\nimport './TableDisplay.styles.scss';\r\n\r\n\r\nconst TableDisplay=(props)=>{\r\n    const {topMovies}=props;\r\n    const imdbMovies=topMovies['imdb'];\r\n    console.log(topMovies);\r\n    return(\r\n        <div className='top-movies'>\r\n            <div className='fluid-container'>\r\n                <div className='row'>\r\n                    <div className='imdb-movies col-md-12'>\r\n                        <h4 className='top-movies-heading'><b>Top Rated Movies on IMDB</b></h4>\r\n                        <TableData movies={imdbMovies} imdb {...props}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableDisplay;","import React, { useState } from 'react';\r\nimport './Header.styles.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport { auth } from '../../firebase/firebase.util';\r\nimport { signInWithGoogle } from '../../firebase/firebase.util';\r\nimport { connect } from 'react-redux';\r\nimport {selectCurrentUser} from '../../redux/user/user.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { AiOutlineBars,AiOutlineCloseCircle } from \"react-icons/ai\";\r\n\r\nconst Header=(props)=>{\r\n    const{currentUser}=props;\r\n    const[openMenu,setOpenMenu]=useState(false);\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"header\">\r\n            <div>\r\n            <Link to=\"/\" className=\"heading\">\r\n                <p>Mr. Movies</p>\r\n            </Link>\r\n            </div>\r\n            <div className=\"options\">\r\n                <Link to=\"/sortMoviesPage\" className=\"option\"><b>Sort and Filter Movies</b></Link>\r\n                <Link to=\"/genrePage\" className=\"option\">Genres</Link>\r\n                <Link to=\"/yearPage\" className=\"option\">Years</Link>\r\n                <Link to=\"/franchisesPage\" className=\"option\">Franchises</Link>\r\n                <Link to=\"/topMoviesPage\" className=\"option\">Top Movies</Link>\r\n                {\r\n                    currentUser?\r\n                    <Link to=\"/wishlistPage\" className=\"option\">Wishlist</Link>:\r\n                    <div></div>\r\n                }\r\n                {\r\n                currentUser?\r\n                <Button variant=\"danger\" onClick={()=>{auth.signOut()}}>SIGN OUT</Button>\r\n                :\r\n                <Button variant=\"primary\" onClick={signInWithGoogle} >Google Sign-in</Button>\r\n                }\r\n            </div>\r\n            <div className='menu-options' onClick={()=>{setOpenMenu(!openMenu);;window.scrollTo(0,0);}}>\r\n                {openMenu?<AiOutlineCloseCircle className='option-menu'/>:<AiOutlineBars className='option-menu'/>}\r\n            </div>\r\n        </div>\r\n        {\r\n            openMenu?\r\n            <div className='nav-menu' onClick={()=>{setOpenMenu(!openMenu)}}>\r\n                <Link to=\"/sortMoviesPage\" className=\"navmenu-option\"><b>Sort and Filter Movies</b></Link>\r\n                <Link to=\"/genrePage\" className='navmenu-option'>Genres</Link>\r\n                <Link to=\"/yearPage\" className='navmenu-option'>Years</Link>\r\n                <Link to=\"/franchisesPage\" className='navmenu-option'>Franchises</Link>\r\n                <Link to=\"/topMoviesPage\" className='navmenu-option'>Top Movies</Link>\r\n                {\r\n                    currentUser?\r\n                    <Link to=\"/wishlistPage\" className='navmenu-option'>Wishlist</Link>:\r\n                    <div></div>\r\n                }\r\n                <div className='signin-button'>\r\n                {\r\n                currentUser?\r\n                <Button variant=\"danger\"  onClick={()=>{auth.signOut()}}>SIGN OUT</Button>\r\n                :\r\n                <Button variant=\"primary\" onClick={signInWithGoogle} >Google Sign-in</Button>\r\n                }\r\n                </div>\r\n            </div>:null\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=createStructuredSelector({\r\n    currentUser:selectCurrentUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\nimport './Slideshow.styles.scss';\r\nimport {Carousel} from 'react-bootstrap';\r\nimport Interstellar from './assets/interstellar.jpg';\r\nimport civil_war from './assets/civil_war.jpg';\r\nimport daysoffuturepast from './assets/daysoffuturepast.jpg';\r\nimport doctor_strange from './assets/doctor_strange.jpg';\r\nimport Dunkirk from './assets/Dunkirk.jpg';\r\nimport f8 from './assets/f8.jpg';\r\nimport jurassic_world from './assets/jurassic_world.jpg';\r\nimport justice_league from './assets/justice_league.jpg';\r\nimport madmax from './assets/madmax.jpg';\r\nimport thor_ragnarok from './assets/thor_ragnarok.jpg';\r\nimport rogue_one from './assets/rogue_one.jpg';\r\nimport potc5 from './assets/potc5.jpg';\r\nimport spectre from './assets/spectre.jpg';\r\nimport jungle_book from './assets/jungle_book.jpg';\r\nimport conjuring2 from './assets/conjuring2.jpg';\r\n\r\nlet posters=[\r\n    {\"url\":Interstellar,\"id\":\"60d6f98649807a12b1dd6e2b\",\"name\":\"Interstellar\",\"year\":\"2014\"},\r\n    {\"url\":civil_war,\"id\":\"60d6f98749807a12b1dd7c93\",\"name\":\"Captain America: Civil War\",\"year\":\"2016\"},\r\n    {\"url\":daysoffuturepast,\"id\":\"60d6f98649807a12b1dd700b\",\"name\":\"X-Men: Days of Future Past\",\"year\":\"2014\"},\r\n    {\"url\":doctor_strange,\"id\":\"60d6f98749807a12b1dd7c94\",\"name\":\"Doctor Strange\",\"year\":\"2016\"},\r\n    {\"url\":Dunkirk,\"id\":\"60d6f98949807a12b1ddc352\",\"name\":\"Dunkirk\",\"year\":\"2017\"},\r\n    {\"url\":f8,\"id\":\"60d6f98949807a12b1ddbdc3\",\"name\":\"The Fate of the Furious\",\"year\":\"2017\"},\r\n    {\"url\":jurassic_world,\"id\":\"60d6f98749807a12b1dd76c8\",\"name\":\"Jurassic World\",\"year\":\"2015\"},\r\n    {\"url\":justice_league,\"id\":\"60d6f98749807a12b1dd7c8d\",\"name\":\"Justice League\",\"year\":\"2017\"},\r\n    {\"url\":madmax,\"id\":\"60d6f98749807a12b1dd7c85\",\"name\":\"Mad Max: Fury Road\",\"year\":\"2015\"},\r\n    {\"url\":thor_ragnarok,\"id\":\"60d6f98749807a12b1dd7c91\",\"name\":\"Thor: Ragnarok\",\"year\":\"2017\"},\r\n    {\"url\":rogue_one,\"id\":\"60d6f98949807a12b1ddb6dd\",\"name\":\"Rogue One: A Star Wars Story\",\"year\":\"2016\"},\r\n    {\"url\":potc5,\"id\":\"60d6f98749807a12b1dd7c8c\",\"name\":\"Pirates of the Caribbean: Dead Men Tell No Tales\",\"year\":\"2017\"},\r\n    {\"url\":spectre,\"id\":\"60d6f98749807a12b1dd8cf5\",\"name\":\"Spectre\",\"year\":\"2015\"},\r\n    {\"url\":jungle_book,\"id\":\"60d6f98749807a12b1dd8f6a\",\"name\":\"The Jungle Book\",\"year\":\"2016\"},\r\n    {\"url\":conjuring2,\"id\":\"60d6f98849807a12b1ddad85\",\"name\":\"The Conjuring 2\",\"year\":\"2016\"}\r\n]\r\n\r\nposters=posters.sort(()=>Math.random()-0.5);\r\nconst Slideshow=(props)=>{\r\n    \r\n    const {history}=props;\r\n    return(\r\n        <div className='Slideshow'>\r\n            <Carousel fade interval={2000}>\r\n                {\r\n                    posters.slice(0,7).map((poster)=>(\r\n                        <Carousel.Item key={poster.id}\r\n                        onClick={()=>{history.push(`/movies/getMovieWithId/${poster.id}`)}}  >\r\n                            <img\r\n                            className=\"d-block w-100 image-display\"\r\n                            src={poster.url}\r\n                            alt=\"Slide1\"\r\n                            />\r\n                            <Carousel.Caption className=\"caption\">\r\n                            <div className='caption-body'>\r\n                            <h3 className='poster-name'><b>{poster.name}</b></h3>\r\n                            <p className='poster-year'>({poster.year})</p>\r\n                            </div>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                    ))\r\n                }\r\n            </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slideshow;","export default __webpack_public_path__ + \"static/media/interstellar.c97e4e3b.jpg\";","export default __webpack_public_path__ + \"static/media/civil_war.94867061.jpg\";","export default __webpack_public_path__ + \"static/media/daysoffuturepast.e2f14c75.jpg\";","export default __webpack_public_path__ + \"static/media/doctor_strange.2e101024.jpg\";","export default __webpack_public_path__ + \"static/media/Dunkirk.29de2b11.jpg\";","export default __webpack_public_path__ + \"static/media/f8.c8110b8f.jpg\";","export default __webpack_public_path__ + \"static/media/jurassic_world.6af21251.jpg\";","export default __webpack_public_path__ + \"static/media/justice_league.28d927a6.jpg\";","export default __webpack_public_path__ + \"static/media/madmax.4abb6837.jpg\";","export default __webpack_public_path__ + \"static/media/thor_ragnarok.498c1a6c.jpg\";","export default __webpack_public_path__ + \"static/media/rogue_one.0ba0eba3.jpg\";","export default __webpack_public_path__ + \"static/media/potc5.1528ca56.jpg\";","export default __webpack_public_path__ + \"static/media/spectre.78f52324.jpg\";","export default __webpack_public_path__ + \"static/media/jungle_book.37b33819.jpg\";","export default __webpack_public_path__ + \"static/media/conjuring2.3c23f556.jpg\";","import React from 'react';\r\nimport './CelebritySpotlight.styles.scss';\r\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\r\nimport {Link} from 'react-router-dom';\r\nimport { FaArrowCircleRight,FaArrowCircleLeft } from \"react-icons/fa\";\r\nconst Arrow = ({ text, className }) => {\r\n    return (\r\n      <div\r\n        className={className}\r\n      >{text}</div>\r\n    );\r\n  };\r\n  \r\n  \r\n  const ArrowLeft = Arrow({ text: <div><FaArrowCircleLeft/></div>, className: 'arrow-prev' });\r\n  const ArrowRight = Arrow({ text: <div><FaArrowCircleRight/></div>, className: 'arrow-next' });\r\n\r\nexport const CelebritySpotlight=(props)=>{\r\n\r\n    let Actors=['Brad Pitt','Tom Cruise','Bradley Cooper','Harrison Ford','Christian Bale','Johnny Depp','Tom Hanks','Robert Downey Jr','Robert De Niro','Leonardo DiCaprio']\r\n    let Actress=['Emma Stone','Kate Winslet','Scarlett Johansson','Nicole Kidman','Natalie Portman','Meryl Streep','Jennifer Lawrence','Cate Blanchett','Eva Green','Saoirse Ronan']\r\n    let Directors=['Christopher Nolan','M. Night Shyamalan','Quentin Tarantino','Steven Spielberg','David Fincher','James Cameron','Martin Scorsese','Sam Raimi','Ridley Scott','Jon Favreau']\r\n    \r\n    Actors=Actors.sort(()=>Math.random()-0.5);\r\n    Actress=Actress.sort(()=>Math.random()-0.5);\r\n    Directors=Directors.sort(()=>Math.random()-0.5);\r\n    const getImage = (image,folder) => {\r\n        return require(`./assets/${folder}/${image}.jpg`).default\r\n     }\r\n\r\n    return(\r\n        <div className='celebrity-spotlight'>\r\n            <h1 className=\"text-display\"><b>Celebrity Spotlight</b></h1>\r\n            <h3 className=\"text-display\">Actors</h3>\r\n            <ScrollMenu\r\n            data=\r\n            {\r\n                Actors.map((img,index) => {\r\n                    return (\r\n                        <Link to={`/searchPage/${img}`} key={index}>\r\n                            <div className=\"image-container\">\r\n                                    <img className=\"celebrity-image\" key={index} src={getImage(img,'Actors')} alt=\"Coming Soon\"/>\r\n                                    <div className=\"after\">\r\n                                        <p className=\"after-text\"><b>{img}</b></p>\r\n                                    </div>\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                 })\r\n            }\r\n            arrowLeft={ArrowLeft}\r\n            arrowRight={ArrowRight}\r\n            wheel={false}\r\n            alignCenter={false}\r\n            hideSingleArrow={true}\r\n          />\r\n          <ScrollMenu\r\n            data=\r\n            {\r\n                Actress.map((img,index) => {\r\n                    return (\r\n                        <Link to={`/searchPage/${img}`} key={index}>\r\n                            <div className=\"image-container\">\r\n                                    <img className=\"celebrity-image\" key={index} src={getImage(img,'Actress')} alt=\"Coming Soon\"/>\r\n                                    <div className=\"after\">\r\n                                        <p className=\"after-text\"><b>{img}</b></p>\r\n                                    </div>\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                 })\r\n            }\r\n            arrowLeft={ArrowLeft}\r\n            arrowRight={ArrowRight}\r\n            wheel={false}\r\n            alignCenter={false}\r\n            hideSingleArrow={true}\r\n          />\r\n          <h3 className=\"text-display\">Directors</h3>\r\n          <ScrollMenu\r\n            data=\r\n            {\r\n                Directors.map((img,index) => {\r\n                    return (\r\n                        <Link to={`/searchPage/${img}`} key={index}>\r\n                            <div className=\"image-container\">\r\n                                    <img className=\"celebrity-image\" key={index} src={getImage(img,'Directors')} alt=\"Coming Soon\"/>\r\n                                    <div className=\"after\">\r\n                                    <p className=\"after-text\"><b>{img}</b></p>\r\n                                    </div>\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                 })\r\n            }\r\n            arrowLeft={ArrowLeft}\r\n            arrowRight={ArrowRight}\r\n            wheel={false}\r\n            alignCenter={false}\r\n            hideSingleArrow={true}\r\n          />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default CelebritySpotlight;","import React from 'react';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { fetchTopHitsAsync } from '../../redux/titles/titles.actions';\r\nimport { selectTopHits, selectTopHitsFetching, selectTopHitsLoaded } from '../../redux/titles/titles.selector';\r\nimport './TopHits.styles.scss';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\nimport TopHitsDisplay from './TopHitsDisplay.component';\r\n\r\nconst TopHitsDisplayWithSpinner=WithSpinner(TopHitsDisplay);\r\nconst TopHits=(props)=>{\r\n    const {topHits,isTopHitsFetching,fetchTopHitsAsync}=props;\r\n    useEffect(()=>{\r\n        fetchTopHitsAsync()\r\n    },[fetchTopHitsAsync])\r\n\r\n    return(\r\n        <div className='top-hits'>\r\n            <h1 className='top-hits-heading'><b>Top User Hits</b></h1>\r\n            <TopHitsDisplayWithSpinner isLoading={isTopHitsFetching} {...props} topHits={topHits}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=createStructuredSelector({\r\n    topHits:selectTopHits,\r\n    isTopHitsFetching:selectTopHitsFetching,\r\n    isTopHitsLoaded:selectTopHitsLoaded\r\n})\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    fetchTopHitsAsync:()=>dispatch(fetchTopHitsAsync())\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TopHits);","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport './TopHitsDisplay.styles.scss';\r\n\r\nconst TopHitsDisplay=(props)=>{\r\n    const {topHits,history}=props;\r\n    let movies=[];\r\n    Object.keys(topHits['movies']).map((id)=>movies.push(topHits['movies'][id]));\r\n    return(\r\n        <div className='top-hits-display'>\r\n            <Table striped bordered hover responsive variant='dark'>\r\n                <thead>\r\n                    <tr className='title-head'>\r\n                        <th>#</th>\r\n                        <th>Title</th>\r\n                        <th>Year</th>\r\n                        <th>Hits</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                       movies.slice(0,15).map((movie,index)=>\r\n                            (\r\n                                <tr className='title-per-row' key={movie._id} onClick={()=>{history.push(`movies/getMovieWithId/${movie._id}`)}}>\r\n                                \r\n                                        <td className='title-table-details'>{index+1}</td>\r\n                                        <td className='title-table-details'>{movie.title}</td>\r\n                                        <td className='title-table-details'>{movie.release_date.split('-')[0]}</td>\r\n                                        <td className='title-table-details'>{movie.hits}</td>\r\n                                    \r\n                                </tr>\r\n                                \r\n                            )\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopHitsDisplay;","import React from 'react';\r\nimport './Recents.styles.scss';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectRecents, selectRecentsFetching, selectRecentsLoaded } from '../../redux/titles/titles.selector';\r\nimport { fetchRecentsAsync } from '../../redux/titles/titles.actions';\r\nimport { useEffect } from 'react';\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\nimport TitleCards from '../TitleCard/TitleCards.component';\r\n\r\nconst TitleCardsWithSpinner=WithSpinner(TitleCards)\r\nconst Recents=(props)=>{\r\n    const{recents,isRecentsFetching,fetchRecentsAsync}=props;\r\n\r\n    useEffect(()=>{\r\n        fetchRecentsAsync()\r\n    },[fetchRecentsAsync])\r\n\r\n    return(\r\n        <div className='recents'>\r\n            <h1 className=\"text-display\"><b>Recents</b></h1>\r\n            <TitleCardsWithSpinner {...props} titles={recents} horizantal isLoading={isRecentsFetching}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=createStructuredSelector({\r\n    recents:selectRecents,\r\n    isRecentsFetching:selectRecentsFetching,\r\n    isRecentsLoaded:selectRecentsLoaded\r\n})\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    fetchRecentsAsync:()=>dispatch(fetchRecentsAsync())\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Recents);","import React from 'react';\r\nimport './Wishlist.styles.scss';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectIsWishlistFetching, selectIsWishlistLoaded, selectWishlist } from '../../redux/titles/titles.selector';\r\nimport TitleCards from '../../components/TitleCard/TitleCards.component';\r\nimport { fetchWishlistAsync } from '../../redux/titles/titles.actions';\r\nimport { selectCurrentUser } from '../../redux/user/user.selector';\r\nimport { useEffect } from 'react';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst TitleCardsWithSpinner=WithSpinner(TitleCards);\r\nconst Wishlist=(props)=>{\r\n\r\n    const {currentUser,fetchWishlistAsync,isWishlistFetching,horizantal}=props;\r\n    let {wishlist}=props;\r\n    useEffect(()=>{\r\n        if(currentUser){\r\n            fetchWishlistAsync(currentUser.wishlist);\r\n            if (!horizantal) {window.scrollTo(0, 0);}\r\n        }\r\n    },[currentUser,fetchWishlistAsync,horizantal])\r\n    \r\n\r\n    return(\r\n        <div className='wishlist'>\r\n            <h1 className='wishlist-name'><b>Wishlist</b></h1>\r\n            {\r\n                currentUser?\r\n                <div>\r\n                    {\r\n                        currentUser.wishlist.length!==0?\r\n                        <div>\r\n                            {\r\n                                horizantal?\r\n                                <TitleCardsWithSpinner titles={wishlist} horizantal isLoading={isWishlistFetching} {...props}/>:\r\n                                <div className='wishlist-vertical'>\r\n                                    <TitleCardsWithSpinner titles={wishlist} isLoading={isWishlistFetching} {...props}/>\r\n                                </div>\r\n                            }\r\n                        </div>:\r\n                        <h1 className='login-pls'>Your wishlist is empty!!</h1>\r\n                    }\r\n                </div>\r\n                :\r\n                <div>\r\n                    <h1 className='login-pls'>Please login to see Wishlist</h1>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=createStructuredSelector({\r\n    currentUser:selectCurrentUser,\r\n    wishlist:selectWishlist,\r\n    isWishlistFetching:selectIsWishlistFetching,\r\n    isWishlistloaded:selectIsWishlistLoaded\r\n})\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    fetchWishlistAsync:(movieIds)=>dispatch(fetchWishlistAsync(movieIds))\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Wishlist);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport TitleCards from '../../components/TitleCard/TitleCards.component';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport { fetchRecentlyViewedAsync } from '../../redux/titles/titles.actions';\r\nimport { selectIsRecentlyViewedFetching, selectIsRecentlyViewedLoaded, selectRecentlyViewed } from '../../redux/titles/titles.selector';\r\nimport { selectCurrentUser } from '../../redux/user/user.selector';\r\nimport './RecentlyViewed.styles.scss';\r\n\r\nconst TitleCardsWithSpinner=WithSpinner(TitleCards);\r\nconst RecentlyViewed=(props)=>{\r\n\r\n    const{currentUser,fetchRecentlyViewedAsync,isRecentlyViewedFetching,horizantal}=props;\r\n    let {recentlyViewed}=props;\r\n\r\n    useEffect(()=>{\r\n        if(currentUser){\r\n            fetchRecentlyViewedAsync(currentUser.recentlyViewed)\r\n            if(!horizantal){\r\n                window.scrollTo(0,0);\r\n            }\r\n        }\r\n    },[currentUser,fetchRecentlyViewedAsync,horizantal])\r\n\r\n    return(\r\n        <div className='recently-viewed'>\r\n            <h1 className='recently-viewed-name'><b>Recently Viewed</b></h1>\r\n            {\r\n                currentUser?\r\n                <div>\r\n                    {\r\n                        currentUser.recentlyViewed.length!==0?\r\n                        <div>\r\n                            {\r\n                                horizantal?\r\n                                <div>\r\n                                    <TitleCardsWithSpinner titles={recentlyViewed} horizantal isLoading={isRecentlyViewedFetching} {...props}/>\r\n                                </div>:\r\n                                <div className='recently-viewed-vertical'>\r\n                                    <TitleCardsWithSpinner titles={recentlyViewed} isLoading={isRecentlyViewedFetching} {...props}/>\r\n                                </div>\r\n                            }\r\n                        </div>:\r\n                        <h1 className='login-pls'>\r\n                            Your recently Viewed is empty!!\r\n                        </h1>\r\n                    }\r\n                </div>:\r\n                <div>\r\n                    <h1 className='login-pls'>Please login to see Recently Viewed</h1>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=createStructuredSelector({\r\n    currentUser:selectCurrentUser,\r\n    recentlyViewed:selectRecentlyViewed,\r\n    isRecentlyViewedFetching:selectIsRecentlyViewedFetching,\r\n    isRecentlyViewedLoaded:selectIsRecentlyViewedLoaded\r\n})\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    fetchRecentlyViewedAsync:(movieIds)=>dispatch(fetchRecentlyViewedAsync(movieIds))\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(RecentlyViewed);\r\n","import React from 'react';\r\nimport Slideshow from '../../components/SlideShow/Slideshow.component';\r\nimport './Home.styles.scss';\r\nimport CelebritySpotlight from '../../components/CelebritySpotlight/CelebritySpotlight.component';\r\nimport SearchPage from '../search/search.component';\r\nimport TopHits from '../../components/TopHits/TopHits.component';\r\nimport Recents from '../../components/Recents/Recents.component';\r\nimport Wishlist from '../wishlist/Wishlist.component';\r\nimport RecentlyViewed from '../recentlyviewed/RecentlyViewed.component';\r\n\r\nconst HomePage=(props)=>{\r\n    return(\r\n        <div className='home-page'>\r\n            <Slideshow {...props}/>\r\n            <div className=\"container-fluid home-body\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <SearchPage {...props}/>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        <Recents {...props}/>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        <RecentlyViewed {...props} horizantal/>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        <Wishlist {...props} horizantal/>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-3'>\r\n                        <TopHits {...props}/>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                        <CelebritySpotlight {...props}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport './Footer.styles.scss';\r\n\r\nexport const Footer=(props)=>{\r\n    return(\r\n        <div className=\"footer\">\r\n            <h5 className=\"comment\"><b>Mr. Movies</b> by <b>Vamsi Krishna Palaparti</b></h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { fetchSortMoviesAsync } from '../../redux/titles/titles.actions';\r\nimport { selectSortMovies, selectSortMoviesFetching, selectSortMoviesLoaded } from '../../redux/titles/titles.selector';\r\nimport './SortMovies.styles.scss';\r\nimport { connect } from 'react-redux';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport TitleCards from '../../components/TitleCard/TitleCards.component';\r\nimport { Typography,Slider,FormGroup,FormControlLabel,Checkbox,RadioGroup,Radio } from '@material-ui/core';\r\nimport { compose } from 'redux';\r\nimport { ImFilter } from \"react-icons/im\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst TitleCardsWithSpinner=WithSpinner(TitleCards);\r\n\r\nclass SortMoviesPage extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            openFilters:false,\r\n            lowest_rating:0,\r\n            highest_rating:10,\r\n            revenueCheckbox:{800000000:false,1500000000:false,3000000000:false},\r\n            genreCheckBox:\r\n            {Action:false,Drama:false,Fantasy:false,Horror:false,Romance:false,Comedy:false,Thriller:false,\r\n                Crime:false,Animation:false,History:false,Adventure:false},\r\n            lowest_revenue:0,\r\n            highest_revenue:3000000000,\r\n            lowest_budget:0,\r\n            highest_budget:400000000,\r\n            genresRegex:new RegExp('','i'),\r\n            query:{}\r\n        }\r\n        this.lowest_rating=this.lowest_rating.bind(this);\r\n        this.highest_rating=this.highest_rating.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.scrollTo(0, 0);\r\n        const {fetchSortMoviesAsync1}=this.props;\r\n        fetchSortMoviesAsync1();\r\n    }\r\n\r\n    fetchFilterMovies(value){\r\n        const{fetchSortMoviesAsync2}=this.props;\r\n        const {lowest_rating,highest_rating,lowest_revenue,highest_revenue,lowest_budget,highest_budget,genresRegex}=this.state;\r\n        const obj={flags:genresRegex.flags,source:genresRegex.source};\r\n        const string=JSON.stringify(obj);\r\n        this.setState({query:{\"$and\":\r\n        [{\"weighted_average_vote\":{\"$gte\":lowest_rating,\"$lte\":highest_rating}},\r\n         {\"revenue\":{\"$gte\":lowest_revenue,\"$lte\":highest_revenue}},\r\n        {\"budget\":{\"$gte\":lowest_budget,\"$lte\":highest_budget}},\r\n        {\"genres\":string}]\r\n    }},\r\n        ()=>fetchSortMoviesAsync2(value,\r\n            this.state.query)\r\n        );  \r\n    }\r\n\r\n    lowest_rating(value){\r\n        this.setState({lowest_rating:value},\r\n            ()=>\r\n            this.fetchFilterMovies(\"weighted_average_vote\"))\r\n    }\r\n\r\n    highest_rating(value){\r\n        this.setState({highest_rating:value},\r\n            ()=>this.fetchFilterMovies(\"weighted_average_vote\"))\r\n    }\r\n\r\n    handleRevenueChange(event,value){\r\n        let checkboxes=this.state.revenueCheckbox;\r\n        if(event.target.value==='800000000'){\r\n            checkboxes[800000000]=value;\r\n        }\r\n        else if(event.target.value==='1500000000'){\r\n            checkboxes[1500000000]=value;\r\n        }\r\n        else{\r\n            checkboxes[3000000000]=value;\r\n        }\r\n        this.setState({revenue:checkboxes},\r\n            ()=>this.callRevenueChange());\r\n    }\r\n\r\n    callRevenueChange(){\r\n        let higher=3000000000;\r\n        if(this.state.revenueCheckbox[3000000000]) higher=3000000000;\r\n        else if(this.state.revenueCheckbox[1500000000]) higher=1500000000;\r\n        else if (this.state.revenueCheckbox[800000000]) higher=800000000;\r\n        this.setState({lowest_revenue:0,highest_revenue:higher},\r\n            ()=>this.fetchFilterMovies(\"revenue\"))\r\n    }\r\n\r\n    handleGenreChange(event,value){\r\n        let genreCheckBox=this.state.genreCheckBox;\r\n        let genre=event.target.value;\r\n        genreCheckBox[genre]=value;\r\n        this.setState({genreCheckBox:genreCheckBox},\r\n            ()=>this.callGenreChange());\r\n    }\r\n\r\n    callGenreChange(){\r\n        let genres=[];\r\n        for(let genre in this.state.genreCheckBox){\r\n            if(this.state.genreCheckBox[genre]){\r\n                genres.push(genre);\r\n            }\r\n        }\r\n        const string='('+genres.map((genre)=>genre).join('|')+')';\r\n        const regex=new RegExp(string,'i');\r\n        this.setState({genresRegex:regex},\r\n            ()=>this.fetchFilterMovies(\"total_votes\"))\r\n    }\r\n\r\n    handleBudgetChange(event,value){\r\n        let lowest=0;\r\n        let highest=400000000;\r\n        if(event.target.value==='0-100'){\r\n            lowest=0;\r\n            highest=100000000;\r\n        }\r\n        else if(event.target.value==='100-200'){\r\n            lowest=100000000;\r\n            highest=200000000;\r\n        }\r\n        else if(event.target.value==='200-300'){\r\n            lowest=200000000;\r\n            highest=300000000\r\n        }\r\n        else if(event.target.value==='300+'){\r\n            lowest=300000000;\r\n            highest=400000000;\r\n        }\r\n        this.setState({lowest_budget:lowest,highest_budget:highest},\r\n            ()=>this.fetchFilterMovies(\"budget\"))\r\n    }\r\n\r\n    Filters_options(){\r\n        return(\r\n            <div className=\"filter-form\">\r\n                            <Typography gutterBottom className='filter-heading'>Ratings:</Typography>\r\n                            <Typography id=\"discrete-slider-low-rating\" gutterBottom className='filter-sub'>Lowest Rating:</Typography>\r\n                            <Slider defaultValue={0} aria-labelledby=\"discrete-slider-low-rating\" valueLabelDisplay=\"auto\"\r\n                                step={1} marks min={0} max={10} onChange={(event,value)=>this.lowest_rating(value)}/>\r\n                            <Typography id=\"discrete-slider-high-rating\" gutterBottom className='filter-sub'>Highest Rating:</Typography>\r\n                            <Slider defaultValue={10} aria-labelledby=\"discrete-slider-high-rating\" valueLabelDisplay=\"auto\"\r\n                                step={1} marks min={0} max={10} onChange={(event,value)=>this.highest_rating(value)}/>\r\n                            <Typography id=\"genres\" gutterBottom className='filter-heading'>Genres: </Typography>\r\n                            <div className='row'>\r\n                                <div className='col-md-6 col-xs-6'>\r\n                            <FormControlLabel control={ <Checkbox name=\"checkedB\" color=\"primary\"/>} checked={this.state.genreCheckBox.Action} value=\"Action\" onChange={(event,value)=>this.handleGenreChange(event,value)} label={<Typography className='filter-sub'>Action</Typography>}/>\r\n                            <FormControlLabel control={ <Checkbox name=\"checkedB\" color=\"primary\"/>} checked={this.state.genreCheckBox.Drama} value=\"Drama\" onChange={(event,value)=>this.handleGenreChange(event,value)} label={<Typography className='filter-sub'>Drama</Typography>}/>\r\n                            <FormControlLabel control={ <Checkbox name=\"checkedB\" color=\"primary\"/>} checked={this.state.genreCheckBox.Fantasy} value=\"Fantasy\" onChange={(event,value)=>this.handleGenreChange(event,value)} label={<Typography className='filter-sub'>Fantasy</Typography>}/>\r\n                            <FormControlLabel control={ <Checkbox name=\"checkedB\" color=\"primary\"/>} checked={this.state.genreCheckBox.Horror} value=\"Horror\" onChange={(event,value)=>this.handleGenreChange(event,value)} label={<Typography className='filter-sub'>Horror</Typography>}/>\r\n                            <FormControlLabel control={ <Checkbox name=\"checkedB\" color=\"primary\"/>} checked={this.state.genreCheckBox.Romance} value=\"Romance\" onChange={(event,value)=>this.handleGenreChange(event,value)} label={<Typography className='filter-sub'>Romance</Typography>}/>\r\n                            <FormControlLabel control={ <Checkbox name=\"checkedB\" color=\"primary\"/>} checked={this.state.genreCheckBox.Comedy} value=\"Comedy\" onChange={(event,value)=>this.handleGenreChange(event,value)} label={<Typography className='filter-sub'>Comedy</Typography>}/>\r\n                                </div>\r\n                                <div className='col-md-6 col-xs-6'>\r\n                                <FormControlLabel control={ <Checkbox name=\"checkedB\" color=\"primary\"/>} checked={this.state.genreCheckBox.Thriller} value=\"Thriller\" onChange={(event,value)=>this.handleGenreChange(event,value)} label={<Typography className='filter-sub'>Thriller</Typography>}/>\r\n                            <FormControlLabel control={ <Checkbox name=\"checkedB\" color=\"primary\"/>} checked={this.state.genreCheckBox.Crime} value=\"Crime\" onChange={(event,value)=>this.handleGenreChange(event,value)} label={<Typography className='filter-sub'>Crime</Typography>}/>\r\n                            <FormControlLabel control={ <Checkbox name=\"checkedB\" color=\"primary\"/>} checked={this.state.genreCheckBox.Animation} value=\"Animation\" onChange={(event,value)=>this.handleGenreChange(event,value)} label={<Typography className='filter-sub'>Animation</Typography>}/>\r\n                            <FormControlLabel control={ <Checkbox name=\"checkedB\" color=\"primary\"/>} checked={this.state.genreCheckBox.History} value=\"History\" onChange={(event,value)=>this.handleGenreChange(event,value)} label={<Typography className='filter-sub'>History</Typography>}/>\r\n                            <FormControlLabel control={ <Checkbox name=\"checkedB\" color=\"primary\"/>} checked={this.state.genreCheckBox.Adventure} value=\"Adventure\" onChange={(event,value)=>this.handleGenreChange(event,value)} label={<Typography className='filter-sub'>Adventure</Typography>}/>\r\n                                </div>\r\n                            </div>\r\n                            <Typography id=\"budget\" gutterBottom className='filter-heading'>Budget: </Typography>\r\n                            <RadioGroup aria-label=\"budget\" name=\"budget\" onChange={(event)=>this.handleBudgetChange(event)}>\r\n                            <FormControlLabel value=\"0-100\" control={<Radio />} label={<Typography className='filter-sub'>0-100million$</Typography>} />\r\n                            <FormControlLabel value=\"100-200\" control={<Radio />} label={<Typography className='filter-sub'>100-200million$</Typography>} />\r\n                            <FormControlLabel value=\"200-300\" control={<Radio />} label={<Typography className='filter-sub'>200-300million$</Typography>} />\r\n                            <FormControlLabel value=\"300+\" control={<Radio />} label={<Typography className='filter-sub'>Above 300million$</Typography>} />\r\n                            <FormControlLabel value=\"All\" control={<Radio />} label={<Typography className='filter-sub'>All</Typography>}/>\r\n                            </RadioGroup>\r\n                            <Typography id=\"revenue\" gutterBottom className='filter-heading'>Revenue: </Typography>\r\n                            <FormGroup row>\r\n                            <FormControlLabel control={ <Checkbox name=\"checkedB\" color=\"primary\"/>} checked={this.state.revenueCheckbox.above2Billion} value=\"3000000000\" onChange={(event,value)=>this.handleRevenueChange(event,value)} label={<Typography className='filter-sub'>Below 3 billion$</Typography>}/>\r\n                            <FormControlLabel control={ <Checkbox name=\"checkedB\" color=\"primary\"/>} checked={this.state.revenueCheckbox.above1Billion} value=\"1500000000\" onChange={(event,value)=>this.handleRevenueChange(event,value)} label={<Typography className='filter-sub'>Below 1.5 billion$</Typography>}/>\r\n                            <FormControlLabel control={ <Checkbox name=\"checkedB\" color=\"primary\"/>} checked={this.state.revenueCheckbox.above500Million} value=\"800000000\" onChange={(event,value)=>this.handleRevenueChange(event,value)} label={<Typography className='filter-sub'>Below 800 million$</Typography>}/>\r\n                            </FormGroup>\r\n        \r\n                            \r\n                            </div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        const {sortMovies,isSortMoviesFetching}=this.props;\r\n        return(\r\n            <div className='sort-movies'>\r\n                <h1 className='sort-heading'><b>Sort Movies</b></h1>\r\n                <div className=\"container-fluid sort-titles\">\r\n                    <div className=\"row\">\r\n                        <div className=\"sorting\">\r\n                            <h5 className='sort-by-heading'>\r\n                                {window.innerWidth>768?<span>Sort movies by:</span>:null}\r\n                                <span className=\"option\" onClick={()=>this.fetchFilterMovies(\"weighted_average_vote\")}>Rating</span>\r\n                                <span className=\"option\" onClick={()=>this.fetchFilterMovies(\"total_votes\")}>Total Votes</span>\r\n                                <span className=\"option\" onClick={()=>this.fetchFilterMovies(\"budget\")}>Budget</span>\r\n                                <span className=\"option\" onClick={()=>this.fetchFilterMovies(\"revenue\")}>Revenue</span>\r\n                                {window.innerWidth>768?<span className=\"option\" onClick={()=>this.fetchFilterMovies(\"runtime\")}>Runtime</span>:null}\r\n                                {window.innerWidth>768?<span className=\"option\" onClick={()=>this.fetchFilterMovies(\"release_date\")}>Release Date</span>:null}\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className='col-md-2'>\r\n                            {\r\n                                window.innerWidth>768?\r\n                                this.Filters_options():\r\n                                <div>\r\n                                    <div className='filter-icon' onClick={()=>this.setState({openFilters:!this.state.openFilters})}><ImFilter/><span> Filter</span></div>\r\n                                    {\r\n                                        this.state.openFilters?\r\n                                        <div>\r\n                                            {\r\n                                                this.Filters_options()\r\n                                            }\r\n                                            <Button variant='outline-secondary' onClick={()=>{this.setState({openFilters:!this.state.openFilters})}}>Apply and Close</Button>\r\n                                        </div>:\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                        {\r\n                            window.innerWidth>768?\r\n                            <TitleCardsWithSpinner isLoading={isSortMoviesFetching} titles={sortMovies} long_cards {...this.props}/>:\r\n                            <TitleCardsWithSpinner isLoading={isSortMoviesFetching} titles={sortMovies} {...this.props}/>\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=createStructuredSelector({\r\n    sortMovies:selectSortMovies,\r\n    isSortMoviesFetching:selectSortMoviesFetching,\r\n    isSortMoviesLoaded:selectSortMoviesLoaded\r\n})\r\n\r\nconst mapDisptachToProps=dispatch=>({\r\n    fetchSortMoviesAsync:(value)=>dispatch(fetchSortMoviesAsync(value)),\r\n    fetchSortMoviesAsync2:(value,query)=>dispatch(fetchSortMoviesAsync(value,query)),\r\n    fetchSortMoviesAsync1:()=>dispatch(fetchSortMoviesAsync())\r\n})\r\n\r\nexport default compose(connect(mapStateToProps,mapDisptachToProps))(SortMoviesPage);","import React from 'react';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectFranchises, selectIsFranchisesFetching,selectIsFranchisesLoaded } from '../../redux/titles/titles.selector';\r\nimport './Franchises.styles.scss';\r\nimport { connect } from 'react-redux';\r\nimport TitleCards from '../../components/TitleCard/TitleCards.component';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport { fetchFranchisesAsync } from '../../redux/titles/titles.actions';\r\nimport { Link } from 'react-router-dom';\r\nimport { MdKeyboardArrowRight } from \"react-icons/md\";\r\nconst TitleCardsWithSpinner=WithSpinner(TitleCards);\r\nclass FranchisesPage extends React.Component{\r\n    \r\n    componentDidMount(){\r\n        window.scrollTo(0, 0);\r\n        const {fetchFranchisesAsync}=this.props;\r\n        fetchFranchisesAsync();\r\n    }\r\n\r\n    render(){\r\n        const {franchises,isFranchisesFecthing}=this.props;\r\n        return(\r\n            <div className='franchises'>\r\n                {\r\n                   Object.keys(franchises).map((heading)=>(\r\n                       <div key={heading}>\r\n                           <h2 key={heading}><Link className='heading' to={`/searchPage/${heading}`}><b>{heading.toUpperCase()} <MdKeyboardArrowRight/></b></Link></h2>\r\n                           <TitleCardsWithSpinner isLoading={isFranchisesFecthing} key={franchises[heading].id}\r\n                           titles={franchises[heading]} horizantal {...this.props}/>\r\n                       </div>\r\n                   ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=createStructuredSelector({\r\n    franchises:selectFranchises,\r\n    isFranchisesFecthing:selectIsFranchisesFetching,\r\n    isFranchisesLoaded:selectIsFranchisesLoaded\r\n})\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    fetchFranchisesAsync:()=>dispatch(fetchFranchisesAsync())\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FranchisesPage);","import React from 'react';\r\nimport './Year.styles.scss';\r\nimport { Button } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectMoviesByYear, selectMoviesByYearFetching, selectMoviesByYearLoaded } from '../../redux/titles/titles.selector';\r\nimport { fetchMoviesByYearAsync } from '../../redux/titles/titles.actions';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport TitleCards from '../../components/TitleCard/TitleCards.component';\r\n\r\nconst TitleCardsWithSpinner=WithSpinner(TitleCards)\r\nclass Year extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            year:2017\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.scrollTo(0, 0);\r\n        const {fetchMoviesByYearAsync}=this.props;\r\n        fetchMoviesByYearAsync(2017);\r\n    }\r\n\r\n    buttonsByYear(){\r\n        let years=[];\r\n        for (let i=1990;i<=2017;i++){\r\n            years.push(<Button \r\n                onClick={()=>{\r\n                this.setState({year:i},\r\n                    this.fetchMoviesByYear(i))}} \r\n                    className={this.state.year===i?\"year-button active\":\"year-button\"} \r\n                    key={i} variant=\"outline-secondary\">\r\n                        <p className='button-year'>\r\n                        <b>{i}</b>\r\n                        </p>\r\n                    </Button>)\r\n        }\r\n        return years;\r\n    }\r\n\r\n\r\n    fetchMoviesByYear(value){\r\n        const {fetchMoviesByYearAsync}=this.props;\r\n        fetchMoviesByYearAsync(value);\r\n    }\r\n\r\n    render(){\r\n        const {moviesByYear,isMoviesByYearFetching}=this.props;\r\n        return(\r\n            <div className='year'>\r\n                <h1 className='year-title'><b>Get Movies by Year</b></h1>\r\n                {this.buttonsByYear()}\r\n                <TitleCardsWithSpinner titles={moviesByYear} isLoading={isMoviesByYearFetching} {...this.props}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=createStructuredSelector({\r\n    moviesByYear:selectMoviesByYear,\r\n    isMoviesByYearFetching:selectMoviesByYearFetching,\r\n    isMoviesByYearLoaded:selectMoviesByYearLoaded\r\n})\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    fetchMoviesByYearAsync:(year)=>dispatch(fetchMoviesByYearAsync(year))\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Year);","import './App.css';\nimport React from 'react';\nimport {Switch,Route} from 'react-router-dom';\nimport { auth, createUserProfileDocument } from './firebase/firebase.util';\nimport GenrePage from './pages/genre/genre.component';\nimport {connect} from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport TitleDescription from './components/TitleDescription/TitleDescription.component';\nimport SearchPage from './pages/search/search.component';\nimport SearchClickPage from './pages/search/SearchClick.component';\nimport TopMoviesPage from './pages/top/topmovies.component';\nimport Header from './components/Header/Header.component';\nimport HomePage from './pages/home/Home.component';\nimport {setCurrentUser} from './redux/user/user.actions';\nimport {selectCurrentUser} from './redux/user/user.selector';\nimport Footer from './components/Footer/Footer.component';\nimport SortMoviesPage from './pages/sort/SortMovies.component';\nimport FranchisesPage from './pages/franchises/Franchises.component';\nimport Wishlist from './pages/wishlist/Wishlist.component';\nimport Year from './pages/year/Year.component';\n\nclass App extends React.Component{\n\n  unSubscribeFromAuth=null;\n\n  componentDidMount(){\n    const {setCurrentUser}=this.props;\n    this.unsubscribeFromAuth=auth.onAuthStateChanged(async userAuth=>{\n      if(userAuth){\n        const userRef=await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapshot=>{\n          setCurrentUser({\n            id:snapshot.id,\n            ...snapshot.data()\n          })\n        });\n      }\n      });\n  }\n\n  componentWillUnmount(){\n    this.unSubscribeFromAuth=null;\n  }\n\n  render(){\n    return(\n      <div>\n        <Header className='header' {...this.props}/>\n        <div className=\"body\">\n        <Switch>\n          <Route path='/genrePage' component={GenrePage}/>\n          <Route path='/franchisesPage' component={FranchisesPage}/>\n          <Route path='/movies/getMovieWithId/:id' component={TitleDescription}/>\n          <Route path='/searchPage/:value' component={SearchClickPage}/>\n          <Route path='/searchPage' component={SearchPage}/>\n          <Route path='/topMoviesPage' component={TopMoviesPage}/>\n          <Route path='/sortMoviesPage' component={SortMoviesPage}/>\n          <Route path='/wishlistPage' component={Wishlist}/>\n          <Route path='/yearPage' component={Year}/>\n          <Route path='/' component={HomePage}/>\n        </Switch>\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps=createStructuredSelector({\n  currentUser:selectCurrentUser\n})\n\nconst mapDispatchToProps=dispatch=>({\n  setCurrentUser: user=>dispatch(setCurrentUser(user))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import TitlesActionTypes from \"./titles.types\";\r\n\r\nconst INITIAL_STATE={\r\n    genreMovies:{Genres:{movies:{}}},\r\n    franchises:{Franchises:{movies:{}}},\r\n    sortMovies:{movies:{}},\r\n    wishlist:{movies:{}},\r\n    recentlyViewed:{movies:{}},\r\n    topHits:{movies:{}},\r\n    moviesByYear:{movies:{}},\r\n    titleSuggestions:{movies:{}},\r\n    recents:{movies:{}},\r\n    movieWithId:null,\r\n    searchMovies:null,\r\n    suggestions:[],\r\n    topMovies:null,\r\n    isFetching:false,\r\n    isFetchingMovie:true,\r\n    isSearching:true,\r\n    isSuggesting:false,\r\n    isFetchingTop:true,\r\n    isFetchingSort:false,\r\n    isFetchingFranchises:false,\r\n    isFetchingWishlist:false,\r\n    isFetchingRecentlyViewed:false,\r\n    isFetchingTopHits:false,\r\n    isFetchingMoviesByYear:false,\r\n    isFetchingTitleSuggestions:false,\r\n    isFetchingRecents:false,\r\n    message:null,\r\n};\r\n\r\nconst MoviesReducer=(state=INITIAL_STATE,action)=>{\r\n    switch(action.type){\r\n\r\n        case TitlesActionTypes.FETCH_GENRE_MOVIES_START:\r\n            return{\r\n                ...state,\r\n                isFetching:true\r\n            }\r\n        case TitlesActionTypes.FETCH_GENRE_MOVIES_SUCCESS:\r\n            return{\r\n                ...state,\r\n                genreMovies:action.payload,\r\n                isFetching:false\r\n            }\r\n        case TitlesActionTypes.FETCH_GENRE_MOVIES_FAILURE:\r\n            return{\r\n                ...state,\r\n                message:action.payload,\r\n                isFetching:false\r\n            }\r\n\r\n        \r\n        case TitlesActionTypes.FETCH_FRANCHISES_START:\r\n            return{\r\n                ...state,\r\n                isFetchingFranchises:true\r\n            }\r\n        case TitlesActionTypes.FETCH_FRANCHISES_SUCCESS:\r\n            return{\r\n                ...state,\r\n                franchises:action.payload,\r\n                isFetchingFranchises:false\r\n            }\r\n        case TitlesActionTypes.FETCH_FRANCHISES_FAILURE:\r\n            return{\r\n                ...state,\r\n                message:action.payload,\r\n                isFetchingFranchises:false\r\n            }\r\n\r\n        \r\n        case TitlesActionTypes.FETCH_MOVIES_BY_YEAR_START:\r\n            return{\r\n                ...state,\r\n                isFetchingMoviesByYear:true\r\n            }\r\n        case TitlesActionTypes.FETCH_MOVIES_BY_YEAR_SUCCESS:\r\n            return{\r\n                ...state,\r\n                moviesByYear:action.payload,\r\n                isFetchingMoviesByYear:false\r\n            }\r\n        case TitlesActionTypes.FETCH_MOVIES_BY_YEAR_FAILURE:\r\n            return{\r\n                ...state,\r\n                message:action.payload,\r\n                isFetchingMoviesByYear:false\r\n            }\r\n    \r\n            \r\n        case TitlesActionTypes.FETCH_MOVIE_WITH_ID_START:\r\n            return{\r\n                ...state,\r\n                isFetchingMovie:true\r\n            }\r\n        case TitlesActionTypes.FETCH_MOVIE_WITH_ID_SUCCESS:\r\n            return{\r\n                ...state,\r\n                movieWithId:action.payload,\r\n                isFetchingMovie:false\r\n            }\r\n        case TitlesActionTypes.FETCH_MOVIE_WITH_ID_FAILURE:\r\n            return{\r\n                ...state,\r\n                isFetchingMovie:false\r\n            }\r\n\r\n\r\n        case TitlesActionTypes.FETCH_WISHLIST_START:\r\n            return{\r\n                ...state,\r\n                isFetchingWishlist:true\r\n            }\r\n        case TitlesActionTypes.FETCH_WISHLIST_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isFetchingWishlist:false,\r\n                wishlist:action.payload\r\n            }\r\n        case TitlesActionTypes.FETCH_WISHLIST_FAILURE:\r\n            return{\r\n                ...state,\r\n                isFetchingWishlist:false,\r\n                message:action.payload\r\n            }\r\n\r\n        case TitlesActionTypes.FETCH_RECENTLY_VIEWED_START:\r\n            return{\r\n                ...state,\r\n                isFetchingRecentlyViewed:true\r\n            }\r\n        case TitlesActionTypes.FETCH_RECENTLY_VIEWED_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isFetchingRecentlyViewed:false,\r\n                recentlyViewed:action.payload\r\n            }\r\n        case TitlesActionTypes.FETCH_RECENTLY_VIEWED_FAILURE:\r\n            return{\r\n                ...state,\r\n                isFetchingRecentlyViewed:false,\r\n                message:action.payload\r\n            }\r\n        \r\n\r\n        case TitlesActionTypes.FETCH_SEARCH_START:\r\n            return{\r\n                ...state,\r\n                isSearching:true\r\n            }\r\n        case TitlesActionTypes.FETCH_SEARCH_SUCCESS:\r\n            return{\r\n                ...state,\r\n                searchMovies:action.payload,\r\n                isSearching:false\r\n            }\r\n        case TitlesActionTypes.FETCH_SEARCH_FAILURE:\r\n            return{\r\n                ...state,\r\n                isFetching:false\r\n            }\r\n\r\n        \r\n        case TitlesActionTypes.FETCH_SUGGESTIONS_START:\r\n            return{\r\n                ...state,\r\n                isSuggesting:true\r\n            }\r\n        case TitlesActionTypes.FETCH_SUGGESTIONS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                suggestions:action.payload,\r\n                isSuggesting:false\r\n            }\r\n        case TitlesActionTypes.FETCH_SUGGESTIONS_FAILURE:\r\n            return{\r\n                ...state,\r\n                message:action.payload,\r\n                isSuggesting:false\r\n            }\r\n\r\n\r\n        case TitlesActionTypes.FETCH_TOP_MOVIES_START:\r\n            return{\r\n                ...state,\r\n                isFetchingTop:true\r\n            }\r\n        case TitlesActionTypes.FETCH_TOP_MOVIES_SUCCESS:\r\n            return{\r\n                ...state,\r\n                topMovies:action.payload,\r\n                isFetchingTop:false\r\n            }\r\n        case TitlesActionTypes.FETCH_TOP_MOVIES_FAILURE:\r\n            return{\r\n                ...state,\r\n                message:action.payload,\r\n                isFetchingTop:false\r\n            }\r\n\r\n        \r\n        case TitlesActionTypes.FETCH_TOP_HITS_START:\r\n            return{\r\n                ...state,\r\n                isFetchingTopHits:true\r\n            }\r\n        case TitlesActionTypes.FETCH_TOP_HITS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                topHits:action.payload,\r\n                isFetchingTopHits:false\r\n            }\r\n        case TitlesActionTypes.FETCH_TOP_HITS_FAILURE:\r\n            return{\r\n                ...state,\r\n                message:action.payload,\r\n                isFetchingTopHits:false\r\n            }\r\n\r\n        \r\n        case TitlesActionTypes.FETCH_RECENTS_START:\r\n            return{\r\n                ...state,\r\n                isFetchingRecents:true\r\n            }\r\n        case TitlesActionTypes.FETCH_RECENTS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                recents:action.payload,\r\n                isFetchingRecents:false\r\n            }\r\n        case TitlesActionTypes.FETCH_RECENTS_FAILURE:\r\n            return{\r\n                ...state,\r\n                message:action.payload,\r\n                isFetchingRecents:false\r\n            }\r\n\r\n\r\n        case TitlesActionTypes.FETCH_TITLE_SUGGESTIONS_START:\r\n            return{\r\n                ...state,\r\n                isFetchingTitleSuggestions:true\r\n            }\r\n        case TitlesActionTypes.FETCH_TITLE_SUGGESTIONS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                titleSuggestions:action.payload,\r\n                isFetchingTitleSuggestions:false\r\n            }\r\n        case TitlesActionTypes.FETCH_TITLE_SUGGESTIONS_FAILURE:\r\n            return{\r\n                ...state,\r\n                message:action.payload,\r\n                isFetchingTitleSuggestions:false\r\n            }\r\n\r\n        \r\n        case TitlesActionTypes.FETCH_SORT_MOVIES_START:\r\n            return{\r\n                ...state,\r\n                isFetchingSort:true\r\n            }\r\n        case TitlesActionTypes.FETCH_SORT_MOVIES_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isFetchingSort:false,\r\n                sortMovies:action.payload\r\n            } \r\n        case TitlesActionTypes.FETCH_SORT_MOVIES_FAILURE:\r\n            return{\r\n                ...state,\r\n                isFetchingSort:false,\r\n                message:action.payload\r\n            }    \r\n        default:\r\n            return {\r\n                ...state,\r\n            };\r\n    }\r\n}\r\n\r\nexport default MoviesReducer;","import {UserActionTypes} from './user.types';\r\n\r\nconst INITIAL_STATE={\r\n    currentUser:null\r\n}\r\n\r\nconst userReducer=(state=INITIAL_STATE,action)=>{\r\n    switch(action.type){\r\n        case UserActionTypes.SET_CURRENT_USER:\r\n            return{\r\n                ...state,\r\n                currentUser:action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import {combineReducers} from 'redux';\r\nimport MoviesReducer from './titles/titles.reducer';\r\nimport userReducer from './user/user.reducer';\r\n\r\nconst rootReducer=combineReducers({\r\n    movies:MoviesReducer,\r\n    user:userReducer\r\n});\r\n\r\nexport default rootReducer;","import {applyMiddleware, createStore} from 'redux';\r\n// import logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middlewares=[thunk]\r\nconst store = createStore(rootReducer,applyMiddleware(...middlewares));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter >\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}